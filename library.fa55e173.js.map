{"mappings":"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","sources":["src/js/render-modal.js","src/js/local-storage.js","src/js/modal-buttons.js","src/js/modal-film.js"],"sourcesContent":["export { filmMarkup };\n\nfunction genreById([...arr]) {\n  const g = localStorage.getItem('GENRES');\n  const genres = JSON.parse(g);\n  let genreName;\n  const array = [...arr];\n  for (let i = 0; i < genres.length; i++) {\n    for (let x = 0; x < array.length; x++) {\n      if (array[x] === genres[i].id) {\n        genreName = genres[i].name;\n        array[x] = genreName;\n      }\n    }\n  }\n\n  if (array.length === 0) {\n    return '';\n  } else if (array.length === 1) {\n    return `${array[0]}`;\n  } else if (array.length === 2) {\n    return `${array[0]}, ${array[1]}`;\n  } else if (array.length === 3) {\n    return `${array[0]}, ${array[1]}, ${array[2]}`;\n  } else if (array.length === 4) {\n    return `${array[0]}, ${array[1]}, ${array[2]}, ${array[3]}`;\n  } else if (array.length === 5) {\n    return `${array[0]}, ${array[1]}, ${array[2]}, ${array[3]}, ${array[4]}`;\n  }\n}\n\nfunction filmMarkup(film) {\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n  let aboutOverview = 'No information';\n  if (film.overview) {\n    aboutOverview = film.overview;\n  }\n\n  return `\n  <div class=\"modal-wrap\">\n      \n      <div class=\"modal-container\">\n        <div class=\"modal-left\">\n      \n          <img src=\"${\n            film.poster_path === null\n              ? 'https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg'\n              : `${IMG_URL}${film.poster_path}`\n          }\"class=\"film-image\" />\n      \n        </div>\n        <div class=\"modal-right\">\n      \n          <h2 class=\"film-modal-title\">${film.original_title}</h2>\n          <table class=\"film-info\">\n            <tr>\n              <td class=\"table-name\">Vote / Votes</td>\n             <td class=\"table-value\"><span class=\"rating-value\">${film.vote_average.toFixed(\n               1\n             )}</span>/ ${film.vote_count}</td>\n             </tr>\n            <tr>\n              <td class=\"table-name\">Popularity</td>\n              <td class=\"table-value\">${film.popularity.toFixed(1)}</td>\n            </tr>\n            <tr>\n              <td class=\"table-name\">Original title</td>\n              <td class=\"table-value\">${film.original_title}</td>\n            </tr>\n            <tr>\n              <td class=\"table-name\">Genre</td>\n              <td class=\"table-value\">${genreById(film.genre_ids)}</td>\n            </tr>\n          </table>\n<div class=\"modal-about\">\n          <h3 class=\"about-title\">About</h3>\n          <p class=\"about-desc\">${aboutOverview}</p>\n      </div>\n      <div class=\"modal-button\">\n        <button class=\"btn watched-btn\" type=\"button\" data-addwatched>ADD TO WATCHED</button>\n         <button class=\"btn watched-btn is-hidden\" type=\"button\" data-removewatched>REMOVE FROM WATCHED</button>\n        <button class=\"btn queue-btn\" type=\"button\" data-addqueue>ADD TO QUEUE</button>\n        <button class=\"btn queue-btn is-hidden\" type=\"button\" data-removequeue>REMOVE FROM QUEUE</button>\n      </div>\n          </div>\n        </div>\n      </div>  \n    </div>`;\n}\n","import refs from \"./refs\";\n\nexport default class LocalStorage { \n    constructor(){ \n        this.watched = [];\n        this.queue = [];\n    }\n\n    addToLSwathced(key) { \n      localStorage.setItem(key, JSON.stringify(this.watched));\n    }\n\n\n   addToLSqueue (key) { \n      localStorage.setItem(key, JSON.stringify(this.queue));\n    }\n    \n};\n\nexport function addCurrrentMoviesToLocalStorage(array) { \nlocalStorage.setItem(\"MOVIE_LIST\", JSON.stringify(array))\n};\n\n\n","import refs from \"./refs\";\nimport LocalStorage from './local-storage'\n\nconst MOVIE_LIST_KEY = \"MOVIE_LIST\";\nconst WATCHED_LIST_KEY = \"WATCHED_LIST\"; \nconst QUEUE_LIST_KEY = \"QUEUE_LIST\";\n\n\n\n\nconst localStor = new LocalStorage;\nlet watchedArray = localStor.watched;\nlet queueArray = localStor.queue;\n\nexport function addWathcedListener(filmId) { \n   \n    const btnAddWatched = document.querySelector(\"[data-addwatched]\");\n    const btnRemoveWatched = document.querySelector(\"[data-removewatched]\");\n\n    const isList = localStorage.getItem(WATCHED_LIST_KEY);\n    const isMovieinWatchedList = movieOfWatchedList(filmId);\n    \n   \n    if (!isList) {\n        console.log(\"нету\");\n        btnAddWatched.addEventListener(\"click\", onAddWathedClick);\n    }\n    else if (isMovieinWatchedList) {\n        btnAddWatched.classList.add(\"is-hidden\");\n        btnRemoveWatched.classList.remove(\"is-hidden\");\n        btnRemoveWatched.addEventListener(\"click\", onRemoveWathedClick);\n    }\n    else { btnAddWatched.addEventListener(\"click\", onAddWathedClick); }\n\n\n    \n\n    \n    function onAddWathedClick(e) { \n        e.preventDefault();\n        const film = getObjectbyId(filmId);\n        if (!isMovieinWatchedList || !isList) { \n             localStor.addToLSwathced(WATCHED_LIST_KEY);\n            watchedArray.push(film); \n            btnAddWatched.classList.add(\"is-hidden\");\n            btnRemoveWatched.classList.remove(\"is-hidden\");   \n            btnRemoveWatched.addEventListener(\"click\", onRemoveWathedClick);\n           \n        }\n         localStor.addToLSwathced(WATCHED_LIST_KEY);\n       \n        \n    };\n    \n    function onRemoveWathedClick(e) {\n\n        btnAddWatched.classList.remove(\"is-hidden\");\n        btnRemoveWatched.classList.add(\"is-hidden\");\n        btnAddWatched.addEventListener(\"click\", onAddWathedClick);\n       \n        const film = getObjectbyId(filmId);\n        const watched_list = localStorage.getItem(WATCHED_LIST_KEY);\n        const watched_list_array = JSON.parse(watched_list);\n        const indexFilm = watched_list_array.findIndex(fil => fil.id === film.id);\n        watchedArray.splice(indexFilm, 1);\n        localStorage.setItem(WATCHED_LIST_KEY, JSON.stringify(watchedArray));\n    }\n\n}\n\n\nexport function addQueueListener(filmId) {\n    \n    const btnAddQueue = document.querySelector(\"[data-addqueue]\");\n    const btnRemoveQueue = document.querySelector(\"[data-removequeue]\");\n    \n    const isMovieinQueueList = movieOfQueueList(filmId);\n    const isList = localStorage.getItem(QUEUE_LIST_KEY);\n\n\n     if (!isList) {\n        btnAddQueue.addEventListener(\"click\", onAddQueueClick);\n     }\n     else if (isMovieinQueueList) {\n        btnAddQueue.classList.add(\"is-hidden\");\n        btnRemoveQueue.classList.remove(\"is-hidden\");\n        btnRemoveQueue.addEventListener(\"click\", onRemoveQueueClick);\n    }\n    else { \n           btnAddQueue.addEventListener(\"click\", onAddQueueClick);\n    }\n\n     function onAddQueueClick(e) { \n        e.preventDefault();\n         const film = getObjectbyId(filmId);\n         \n         if (!isMovieinQueueList || isList) { \n            localStor.addToLSqueue(QUEUE_LIST_KEY);\n            queueArray.push(film); \n            btnAddQueue.classList.add(\"is-hidden\");\n            btnRemoveQueue.classList.remove(\"is-hidden\");   \n            btnRemoveQueue.addEventListener(\"click\", onRemoveQueueClick);   \n        }   \n         localStor.addToLSqueue(QUEUE_LIST_KEY);\n\n    }\n\n    function onRemoveQueueClick(e) {\n\n        btnAddQueue.classList.remove(\"is-hidden\");\n        btnRemoveQueue.classList.add(\"is-hidden\");\n        btnAddQueue.addEventListener(\"click\", onAddQueueClick);\n       \n        const film = getObjectbyId(filmId);\n        const queue_list = localStorage.getItem(QUEUE_LIST_KEY);\n        const queue_list_array = JSON.parse(queue_list);\n        const indexFilm = queue_list_array.findIndex(fil => fil.id === film.id);\n        queueArray.splice(indexFilm, 1);\n        localStorage.setItem(QUEUE_LIST_KEY, JSON.stringify(queueArray));\n    }\n\n\n };\n\nfunction movieOfWatchedList(filmid) {\n    const watched_list = localStorage.getItem(WATCHED_LIST_KEY);\n    if (!watched_list) {\n        return null;\n    }\n    else {\n    const watched_list_array = JSON.parse(watched_list);\n   return watched_list_array.find(f => f.id === filmid);\n     }\n \n  \n}; \n\nfunction movieOfQueueList(filmid) {\n    const queue_list = localStorage.getItem(QUEUE_LIST_KEY);\n    if (!queue_list) {\n        return null;\n    } else { \n         const queue_list_array = JSON.parse(queue_list);\n  return queue_list_array.find(f => f.id === filmid);\n    }\n \n};\n\nfunction getObjectbyId(filmId) { \n     const movie_list = localStorage.getItem(MOVIE_LIST_KEY)\n    const array = JSON.parse(movie_list)\n    let objectMovie = array.find(films => films.id === filmId);\n    return objectMovie;\n};\n \n\n\n \n\n\n\n","import { filmMarkup } from './render-modal';\nimport refs from './refs';\nimport { outOfModal, escExit, closeModal } from './closeModalFunction';\nimport { addWathcedListener, addQueueListener } from \"./modal-buttons\";\n\n\nlet ifOpen = '';\n\nif (!ifOpen) {\n  document.removeEventListener('click', escExit);\n}\n\nrefs.onBtnOpen.addEventListener('click', onModalOpen);\nrefs.onBtnClose.addEventListener('click', closeModal);\nrefs.modal.addEventListener('click', outOfModal);\n\nfunction onModalOpen(e) {\n  if (e.target.nodeName === 'IMG' || e.target.nodeName === 'H2') {\n    refs.modal.classList.remove('is-hidden');\n    const filmId = Number(e.target.dataset.id);\n\n    getFilmById(filmId);\n    addWathcedListener(filmId);\n    addQueueListener(filmId);\n\n  }\n  ifOpen = true;\n  if (ifOpen) {\n    document.addEventListener('keydown', escExit);\n  }\n}\n\nfunction getFilmFromLocal(localKey) {\n  const f = localStorage.getItem(localKey);\n  const films = JSON.parse(f);\n  return films;\n}\n\nfunction getFilmById(id, localKey) {\n  const films = getFilmFromLocal(localKey);\n  films.find(film => {\n    if (film.id === id) {\n      const markup = filmMarkup(film);\n      refs.modalContent.insertAdjacentHTML('beforeend', markup);\n    }\n  });\n}\n"],"names":["$6a9515fde0218557$export$5276146c0c06ec59","film","aboutOverview","overview","poster_path","original_title","vote_average","toFixed","vote_count","popularity","arr","g","localStorage","getItem","genres","JSON","parse","genreName","array","i","length","x","id","name","$6a9515fde0218557$var$genreById","genre_ids","parcelRequire","$8125d1701b78b442$export$2e2bcd8739ae039","addToLSwathced","key","setItem","stringify","this","watched","addToLSqueue","queue","constructor","$8125d1701b78b442$export$17c42003be0bef09","$17777681ebe48e55$var$localStor","$b5rV1","default","$17777681ebe48e55$var$watchedArray","$17777681ebe48e55$var$queueArray","$17777681ebe48e55$export$b76944bfc66230b5","filmId","btnAddWatched","document","querySelector","btnRemoveWatched","isList","isMovieinWatchedList","filmid","watched_list","find","f","$17777681ebe48e55$var$movieOfWatchedList","onAddWathedClick","e","preventDefault","$17777681ebe48e55$var$getObjectbyId","push","classList","add","remove","addEventListener","onRemoveWathedClick","indexFilm","findIndex","fil","splice","console","log","$17777681ebe48e55$export$d3844f4ab51c5b02","btnAddQueue","btnRemoveQueue","isMovieinQueueList","queue_list","$17777681ebe48e55$var$movieOfQueueList","onAddQueueClick","onRemoveQueueClick","movie_list","films","$b89ac968f8ae7162$var$ifOpen","removeEventListener","$jAPMa","escExit","$krGWQ","onBtnOpen","target","nodeName","modal","Number","dataset","localKey","$b89ac968f8ae7162$var$getFilmFromLocal","markup","modalContent","insertAdjacentHTML","onBtnClose","closeModal","outOfModal"],"version":3,"file":"library.fa55e173.js.map"}