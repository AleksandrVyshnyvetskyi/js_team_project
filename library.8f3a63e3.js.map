{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,aA+BA,SAASC,EAAWC,GAClB,IAEIC,EAAgB,iBAKpB,OAJID,EAAKE,WACPD,EAAgBD,EAAKE,UAGhB,4IAegCC,OARR,OAArBH,EAAKI,YACD,6EACA,GAAaD,OAhBX,mCAgB4BA,OAAjBH,EAAKI,aACvB,sIASuDD,OAJzBH,EAAKK,eAAe,0LAMnCF,OAFwCH,EAAKM,aAAaC,QACrE,GACA,aAIyBJ,OAJdH,EAAKQ,WAAW,6IAQFL,OAJAH,EAAKS,WAAWF,QAAQ,GAAG,gJAQ3BJ,OAJAH,EAAKK,eAAe,uIAS1BF,OA3ElC,SAAmBO,GAKjB,I,IAFIC,EAHcC,EAAOC,EAAAhB,EAAA,CAARa,GAAQI,MAAP,GACZC,EAAIC,aAAaC,QAAQ,UACzBC,EAASC,KAAKC,MAAML,GAEpBM,EAASR,EAAAS,EAAA,CAAGV,GACTW,EAAI,EAAGA,EAAIL,EAAOM,OAAQD,IACjC,IAAK,IAAIE,EAAI,EAAGA,EAAIJ,EAAMG,OAAQC,IAC5BJ,EAAMI,KAAOP,EAAOK,GAAGG,KACzBf,EAAYO,EAAOK,GAAGI,KACtBN,EAAMI,GAAKd,GAKjB,OAAqB,IAAjBU,EAAMG,OACD,GACmB,IAAjBH,EAAMG,OACR,GAAYrB,OAATkB,EAAM,IACU,IAAjBA,EAAMG,OACR,GAAgBrB,OAAbkB,EAAM,GAAG,MAAalB,OAATkB,EAAM,IACH,IAAjBA,EAAMG,OACR,GAAgBrB,OAAbkB,EAAM,GAAG,MAAiBlB,OAAbkB,EAAM,GAAG,MAAalB,OAATkB,EAAM,IAChB,IAAjBA,EAAMG,OACR,GAAgBrB,OAAbkB,EAAM,GAAG,MAAiBlB,OAAbkB,EAAM,GAAG,MAAiBlB,OAAbkB,EAAM,GAAG,MAAalB,OAATkB,EAAM,IAC7B,IAAjBA,EAAMG,OACR,GAAgBrB,OAAbkB,EAAM,GAAG,MAAiBlB,OAAbkB,EAAM,GAAG,MAAiBlB,OAAbkB,EAAM,GAAG,MAAiBlB,OAAbkB,EAAM,GAAG,MAAalB,OAATkB,EAAM,SAD/D,C,CA8C+BO,CAAU5B,EAAK6B,WAAW,2JAKlB1B,OAAdF,EAAc,whB,+BC1E5C6B,EAAS,GAmCb,SAASC,EAAYL,EAAIM,GACvB,IAAMC,EAPR,SAA0BD,GACxB,IAAME,EAAIlB,aAAaC,QAAQe,GAE/B,OADcb,KAAKC,MAAMc,E,CAKXC,CAAiBH,GAC/BC,EAAMG,MAAK,SAAApC,GACT,GAAIA,EAAK0B,KAAOA,EAAI,CAClB,IAAMW,EAAStC,EAAWC,GAC1BsC,EAAAC,QAAKC,aAAaC,mBAAmB,YAAaJ,E,KAtCnDP,GACHY,SAASC,oBAAoB,QAASC,EAAAC,SAGxCP,EAAAC,QAAKO,aAAaC,iBAAiB,SAInC,SAAqBC,GACnB,GAA0B,QAAtBA,EAAEC,OAAOC,UAA4C,OAAtBF,EAAEC,OAAOC,SAAmB,CAC7DZ,EAAAC,QAAKY,MAAMC,UAAUC,OAAO,aAC5B,IAAMC,EAASC,OAAOP,EAAEC,OAAOO,QAAQ9B,IAEvCK,EAAYuB,EAAQ,gBACkB,KAAlChB,EAAAC,QAAKC,aAAaiB,aACpB1B,EAAYuB,EAAQ,cAGtBI,YAAYJ,GACZZ,SAASiB,KAAKC,MAAMC,UAAY,Q,EAElC/B,GAAS,IAEPY,SAASK,iBAAiB,UAAWH,EAAAC,Q,IAlBzCP,EAAAC,QAAKuB,WAAWf,iBAAiB,QAASH,EAAAmB,YAC1CzB,EAAAC,QAAKY,MAAMJ,iBAAiB,QAASH,EAAAoB,W","sources":["src/js/render-modal.js","src/js/modal-film-forLib.js"],"sourcesContent":["export { filmMarkup };\n\nfunction genreById([...arr]) {\n  const g = localStorage.getItem('GENRES');\n  const genres = JSON.parse(g);\n  let genreName;\n  const array = [...arr];\n  for (let i = 0; i < genres.length; i++) {\n    for (let x = 0; x < array.length; x++) {\n      if (array[x] === genres[i].id) {\n        genreName = genres[i].name;\n        array[x] = genreName;\n      }\n    }\n  }\n\n  if (array.length === 0) {\n    return '';\n  } else if (array.length === 1) {\n    return `${array[0]}`;\n  } else if (array.length === 2) {\n    return `${array[0]}, ${array[1]}`;\n  } else if (array.length === 3) {\n    return `${array[0]}, ${array[1]}, ${array[2]}`;\n  } else if (array.length === 4) {\n    return `${array[0]}, ${array[1]}, ${array[2]}, ${array[3]}`;\n  } else if (array.length === 5) {\n    return `${array[0]}, ${array[1]}, ${array[2]}, ${array[3]}, ${array[4]}`;\n  }\n}\n\nfunction filmMarkup(film) {\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n  let aboutOverview = 'No information';\n  if (film.overview) {\n    aboutOverview = film.overview;\n  }\n\n  return `\n  <div class=\"modal-wrap\">\n      \n      <div class=\"modal-container\">\n        <div class=\"modal-left\">\n      \n          <img src=\"${\n            film.poster_path === null\n              ? 'https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg'\n              : `${IMG_URL}${film.poster_path}`\n          }\"class=\"film-image\" />\n      \n        </div>\n        <div class=\"modal-right\">\n      \n          <h2 class=\"film-modal-title\">${film.original_title}</h2>\n          <table class=\"film-info\">\n            <tr>\n              <td class=\"table-name\">Vote / Votes</td>\n             <td class=\"table-value\"><span class=\"rating-value\">${film.vote_average.toFixed(\n               1\n             )}</span>/ ${film.vote_count}</td>\n             </tr>\n            <tr>\n              <td class=\"table-name\">Popularity</td>\n              <td class=\"table-value\">${film.popularity.toFixed(1)}</td>\n            </tr>\n            <tr>\n              <td class=\"table-name\">Original title</td>\n              <td class=\"table-value\">${film.original_title}</td>\n            </tr>\n            <tr>\n              <td class=\"table-name\">Genre</td>\n              <td class=\"table-value\">${genreById(film.genre_ids)}</td>\n            </tr>\n          </table>\n<div class=\"modal-about\">\n          <h3 class=\"about-title\">About</h3>\n          <p class=\"about-desc\">${aboutOverview}</p>\n      </div>\n      <div class=\"modal-button\">\n        <button class=\"btn watched-btn\" type=\"button\" data-addwatched>ADD TO WATCHED</button>\n         <button class=\"btn watched-btn is-hidden\" type=\"button\" data-removewatched>REMOVE FROM WATCHED</button>\n        <button class=\"btn queue-btn\" type=\"button\" data-addqueue>ADD TO QUEUE</button>\n        <button class=\"btn queue-btn is-hidden\" type=\"button\" data-removequeue>REMOVE FROM QUEUE</button>\n      </div>\n          </div>\n        </div>\n      </div>  \n    </div>`;\n}\n","import { filmMarkup } from './render-modal';\nimport refs from './refs';\nimport { outOfModal, escExit, closeModal } from './closeModalFunction';\nlet ifOpen = '';\n\nif (!ifOpen) {\n  document.removeEventListener('click', escExit);\n}\n\nrefs.containerBox.addEventListener('click', onModalOpen);\nrefs.onBtnClose.addEventListener('click', closeModal);\nrefs.modal.addEventListener('click', outOfModal);\n\nfunction onModalOpen(e) {\n  if (e.target.nodeName === 'IMG' || e.target.nodeName === 'H2') {\n    refs.modal.classList.remove('is-hidden');\n    const filmId = Number(e.target.dataset.id);\n\n    getFilmById(filmId, 'WATCHED_LIST');\n    if (refs.modalContent.textContent === '') {\n      getFilmById(filmId, 'QUEUE_LIST');\n    }\n\n    addListener(filmId);\n    document.body.style.overflowY = 'hidden';\n  }\n  ifOpen = true;\n  if (ifOpen) {\n    document.addEventListener('keydown', escExit);\n  }\n}\n\nfunction getFilmFromLocal(localKey) {\n  const f = localStorage.getItem(localKey);\n  const films = JSON.parse(f);\n  return films;\n}\n\nfunction getFilmById(id, localKey) {\n  const films = getFilmFromLocal(localKey);\n  films.find(film => {\n    if (film.id === id) {\n      const markup = filmMarkup(film);\n      refs.modalContent.insertAdjacentHTML('beforeend', markup);\n    }\n  });\n}\n"],"names":["$q7ZX2","parcelRequire","$04119f8a248c7cd9$export$5276146c0c06ec59","film","aboutOverview","overview","concat","poster_path","original_title","vote_average","toFixed","vote_count","popularity","param","genreName","arr","$parcel$interopDefault","slice","g","localStorage","getItem","genres","JSON","parse","array","$8nrFW","i","length","x","id","name","$04119f8a248c7cd9$var$genreById","genre_ids","$558382d0eadc7a91$var$ifOpen","$558382d0eadc7a91$var$getFilmById","localKey","films","f","$558382d0eadc7a91$var$getFilmFromLocal","find","markup","$4Nugj","default","modalContent","insertAdjacentHTML","document","removeEventListener","$FH8Gh","escExit","containerBox","addEventListener","e","target","nodeName","modal","classList","remove","filmId","Number","dataset","textContent","addListener","body","style","overflowY","onBtnClose","closeModal","outOfModal"],"version":3,"file":"library.8f3a63e3.js.map"}