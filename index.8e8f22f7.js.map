{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,WCaAC,SAASC,KAAKC,OAAS,WACnBC,YAAW,WACP,MAAMC,EAAYJ,SAASK,eAAe,aACrCD,EAAUE,UAAUC,SAAS,SAC9BH,EAAUE,UAAUE,IAAI,O,GAE7B,I,6CDZP,MAAMC,EAAO,CACTC,WAAYV,SAASW,cAAc,sBACnCC,QAASZ,SAASW,cAAc,iBAChCE,gBAAiBb,SAASW,cAAc,8BACxCG,UAAWd,SAASW,cAAc,sBAGhCI,EAAa,IAAI,EAAAC,EAAAC,SACjBC,EAAa,IAAI,EAAAC,EAAAF,SAiCvBG,eAAeC,EAAeC,GAAO,GAEjC,MAAMC,EAAYD,GAAc,EACJP,EAAjBS,cAAgBD,EAG3B,UACUR,EAAWU,mBAAmBC,MAAKC,IACvC,GAAyB,IAArBA,EAAKC,YACN,OAAOnB,EAAKK,UAAUR,UAAUuB,OAAO,aAExCX,EAAWY,eAAiBP,EACFL,EAAfa,cAAgBJ,EAAKC,YACGV,EAAxBc,YAAcX,EACKH,EAAnBe,mBAgEnBxB,EAAKI,gBAAgBqB,UAAY,GA9DzBzB,EAAKK,UAAUR,UAAUE,IAAI,cAE7B,EAAAV,EAAAqC,kBAAiBR,EAAKS,UACtB,EAAAC,EAAAC,iCAAiCX,EAAKS,SACtCG,QAAQC,IAAIb,EAAKC,YAAY,G,CAEnC,MAAOa,GACLF,QAAQC,IAAIC,E,EA1CpBhC,EAAKC,WAAWgC,iBAAiB,UAEjC,SAAkBC,GAKd,GAHAA,EAAMC,iBACN7B,EAAW8B,WAAaF,EAAMG,cAAcC,SAASC,MAAMC,MAAMC,OAEtC,KAAvBzC,EAAKG,QAAQqC,MACZ,OAAOxC,EAAKK,UAAUR,UAAUuB,OAAO,aAI5CpB,EAAKK,UAAUR,UAAUE,IAAI,aAE7Ba,IAEAZ,EAAKG,QAAQqC,MAAQ,E","sources":["src/js/search-by-keyword.js","src/js/loader.js"],"sourcesContent":["import { renderMoviesCard } from \"./create-markup\";\nimport { hideLoader, showLoader } from './loader';\nimport { addCurrrentMoviesToLocalStorage } from \"./local-storage\";\nimport Pagination from './pagination.js';\nimport API from './api-service.js';\n\n\nconst refs = {\n    searchForm: document.querySelector('.header_input-wrap'),\n    inputEl: document.querySelector('.header_input'),\n    moviesContainer: document.querySelector('.main-container--card__box'),\n    errorText: document.querySelector('.header_error-msg'),\n};\n\nconst apiService = new API;\nconst pagination = new Pagination;\n\n///////винесено в api-service\n// let searchQuery = '';\n\n// const BASE_URL = `https://api.themoviedb.org/3/search/movie`;\n// const KEY = `2994e3a31c3cad99fd99bf3fe61d916f`;\n\n// async function fetchSearchMovie(searchQuery) {\n//     return await axios.get(`${BASE_URL}?api_key=${KEY}&language=en-US&query=${searchQuery}`)\n//         .then(response => response.data);\n// }\n///////////\n\nrefs.searchForm.addEventListener('submit', onSearch);\n\nfunction onSearch(event) {\n    \n    event.preventDefault();\n    apiService.inputQuery = event.currentTarget.elements.query.value.trim();\n\n    if (refs.inputEl.value === \"\") {\n         return refs.errorText.classList.remove('is-hidden');\n    }\n    \n    // console.log(searchQuery);\n    refs.errorText.classList.add('is-hidden');\n   \n    getSearchMovie();\n\n    refs.inputEl.value = \"\";\n}\n\nasync function getSearchMovie(page = false) {\n    \n    const queryPage = page ? page : 1; // Проверка страниц, обязательно до fetch\n    apiService.setPageNumber = queryPage; // Передает текущую страницу в класс api\n\n    // showLoader();\n    try {\n        await apiService.fetchSearchMovie().then(data => {\n          if (data.total_pages === 0) {\n             return refs.errorText.classList.remove('is-hidden');\n           };\n            pagination.setCurrentPage = queryPage; // Передает страницу в пагинатор\n            pagination.setTotalPages = data.total_pages; // Передает общее кол-во страниц в пагинатор\n            pagination.setCallback = getSearchMovie; // Передает ссылку на коллбэк функцию \n            pagination.renderPagination(); // Вызов пагинации\n            clearMoviesContainer();\n            refs.errorText.classList.add('is-hidden');\n            \n            renderMoviesCard(data.results);\n            addCurrrentMoviesToLocalStorage (data.results) \n            console.log(data.total_pages);\n        });      \n    } catch (error) {\n        console.log(error)\n    } finally {\n        // hideLoader();\n    }\n    \n}\n\n///////////// --функція перенесена в файл create-markup----///////\n// function renderMoviesCard(results) {\n//     const markup = results\n//         .map(el => {\n//             return `\n//             <li class=\"main-container--card\">\n//             <img src = \"https://image.tmdb.org/t/p/w500${el.poster_path}\"\n//             class = \"film-poster\"\n//             alt=\"${el.original_title}\" loading=\"lazy\"\n//              />\n//             <div class=\"film-info\">\n//             <h3 class=\"film-title\">${el.original_title.toUpperCase()}</h3>\n//             <p class=\"more-info\">${transformId(el.genre_ids)} | ${el.release_date.slice(0, 4)}</p>\n//             </div>\n//             </li> `\n//         })\n//         .join('');\n    \n//     refs.moviesContainer.insertAdjacentHTML('beforeend', markup);\n// };\n\n///////////// --функція перенесена в файл create-markup----///////\n// function transformId ([...arr]) {\n//     const g = localStorage.getItem(\"GENRES\");\n//     const genres = JSON.parse(g);\n//     let genreName;\n//     const array = [...arr]\n//     for (let i = 0; i < genres.length; i++) {\n//         for (let y = 0; y < array.length; y++) {\n//             if (array[y] === genres[i].id) {\n//                 genreName = genres[i].name;\n//                 array[y] = genreName\n//             };\n//         };\n//     };\n//     // console.log(array)\n//     if (array.length > 3) {\n//         return `${array[0]}, ${array[1]}, Other`\n//     } else if (array.length > 2) {\n//         return `${array[0]}, ${array[1]}, ${array[2]}`\n//     } else if (array.length > 1) {\n//         return `${array[0]}, ${array[1]}`\n//     }\n//     return `${array[0]}`\n// };\n\n\nfunction clearMoviesContainer() {\n    refs.moviesContainer.innerHTML = \"\";\n}\n\n","import '../sass/_loader.scss';\nimport refs from \"./refs\";\n\n// приховати loader\n// export function hideLoader() {\n//   refs.loaderRef.loader.classList.add('is-hidden');\n// }\n// // // показати loader\n// export function showLoader() {\n//   refs.loaderRef.loader.classList.remove('is-hidden');\n// }\n\n\ndocument.body.onload = function () {\n    setTimeout(function () {\n        const preloader = document.getElementById('preloader');\n        if (!preloader.classList.contains('done')) {\n            preloader.classList.add('done');\n        }\n    }, 800);\n}"],"names":["$k0Ust","parcelRequire","document","body","onload","setTimeout","preloader","getElementById","classList","contains","add","$c808da8250b3ec39$var$refs","searchForm","querySelector","inputEl","moviesContainer","errorText","$c808da8250b3ec39$var$apiService","$7me8F","default","$c808da8250b3ec39$var$pagination","$2nhTy","async","$c808da8250b3ec39$var$getSearchMovie","page","queryPage","setPageNumber","fetchSearchMovie","then","data","total_pages","remove","setCurrentPage","setTotalPages","setCallback","renderPagination","innerHTML","renderMoviesCard","results","$b5rV1","addCurrrentMoviesToLocalStorage","console","log","error","addEventListener","event","preventDefault","inputQuery","currentTarget","elements","query","value","trim"],"version":3,"file":"index.8e8f22f7.js.map"}