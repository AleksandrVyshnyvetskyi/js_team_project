{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,aCaAC,SAASC,KAAKC,OAAS,WACnBC,YAAW,WACP,MAAMC,EAAYJ,SAASK,eAAe,aACrCD,EAAUE,UAAUC,SAAS,SAC9BH,EAAUE,UAAUE,IAAI,UAE7B,MDdP,MAAMC,EAAO,CACTC,WAAYV,SAASW,cAAc,sBACnCC,QAASZ,SAASW,cAAc,iBAChCE,gBAAiBb,SAASW,cAAc,8BACxCG,UAAWd,SAASW,cAAc,sBAMhB,IAAlBI,EAAc,GAWlBN,EAAKC,WAAWM,iBAAiB,UAEjCC,eAAwBC,GAUpB,GARAA,EAAMC,iBAENJ,EAAcG,EAAME,cAAcC,SAASC,MAAMC,MAAMC,OAGvDf,EAAKK,UAAUR,UAAUE,IAAI,aAGT,KAAhBO,EACA,OAAON,EAAKK,UAAUR,UAAUmB,OAAO,aAG3C,IACI,MAAMC,QAvBdT,eAAgCU,GAC5B,aAAaC,EAAA9B,GAAM+B,IAAI,2GAAmDF,KACrEG,MAAKC,GAAYA,EAASC,OAqBNC,CAAiBlB,GAEtC,GAA2B,IAAvBW,EAAOQ,YACN,OAAOzB,EAAKK,UAAUR,UAAUmB,OAAO,aA+DlDhB,EAAKI,gBAAgBsB,UAAY,GA3D3B1B,EAAKK,UAAUR,UAAUE,IAAI,cAC7B,EAAA4B,EAAAC,kBAAiBX,EAAOY,SACxBC,gCAAiCb,EAAOY,SACxCE,QAAQC,IAAIf,EAAOY,SAGrB,MAAOI,GAASF,QAAQC,IAAIC,GAE9BjC,EAAKG,QAAQW,MAAQ","sources":["src/js/search-by-keyword.js","src/js/loader.js"],"sourcesContent":["import axios from \"axios\";\nimport { renderMoviesCard } from \"./create-markup\";\nimport { hideLoader, showLoader } from './loader';\n\n\nconst refs = {\n    searchForm: document.querySelector('.header_input-wrap'),\n    inputEl: document.querySelector('.header_input'),\n    moviesContainer: document.querySelector('.main-container--card__box'),\n    errorText: document.querySelector('.header_error-msg'),\n};\n\n\n\n///////Буде винесено в інший файл\nlet searchQuery = '';\n\nconst BASE_URL = `https://api.themoviedb.org/3/search/movie`;\nconst KEY = `2994e3a31c3cad99fd99bf3fe61d916f`;\n\nasync function fetchSearchMovie(searchQuery) {\n    return await axios.get(`${BASE_URL}?api_key=${KEY}&language=en-US&query=${searchQuery}`)\n        .then(response => response.data);\n}\n///////////\n\nrefs.searchForm.addEventListener('submit', onSearch);\n\nasync function onSearch(event) {\n    \n    event.preventDefault();\n\n    searchQuery = event.currentTarget.elements.query.value.trim();\n    // console.log(searchQuery);\n\n    refs.errorText.classList.add('is-hidden');\n    \n\n    if (searchQuery === '') {\n        return refs.errorText.classList.remove('is-hidden');\n    };\n   \n    try {\n        const movies = await fetchSearchMovie(searchQuery);\n\n        if (movies.total_pages === 0) {\n             return refs.errorText.classList.remove('is-hidden');\n        };\n\n        clearMoviesContainer();\n        refs.errorText.classList.add('is-hidden');\n        renderMoviesCard(movies.results);\n        addCurrrentMoviesToLocalStorage (movies.results) \n        console.log(movies.results);\n        \n                \n    } catch (error) { console.log(error) };\n\n    refs.inputEl.value = \"\";\n}\n\n///////////// --функція перенесена в файл create-markup----///////\n// function renderMoviesCard(results) {\n//     const markup = results\n//         .map(el => {\n//             return `\n//             <li class=\"main-container--card\">\n//             <img src = \"https://image.tmdb.org/t/p/w500${el.poster_path}\"\n//             class = \"film-poster\"\n//             alt=\"${el.original_title}\" loading=\"lazy\"\n//              />\n//             <div class=\"film-info\">\n//             <h3 class=\"film-title\">${el.original_title.toUpperCase()}</h3>\n//             <p class=\"more-info\">${transformId(el.genre_ids)} | ${el.release_date.slice(0, 4)}</p>\n//             </div>\n//             </li> `\n//         })\n//         .join('');\n    \n//     refs.moviesContainer.insertAdjacentHTML('beforeend', markup);\n// };\n\n///////////// --функція перенесена в файл create-markup----///////\n// function transformId ([...arr]) {\n//     const g = localStorage.getItem(\"GENRES\");\n//     const genres = JSON.parse(g);\n//     let genreName;\n//     const array = [...arr]\n//     for (let i = 0; i < genres.length; i++) {\n//         for (let y = 0; y < array.length; y++) {\n//             if (array[y] === genres[i].id) {\n//                 genreName = genres[i].name;\n//                 array[y] = genreName\n//             };\n//         };\n//     };\n//     // console.log(array)\n//     if (array.length > 3) {\n//         return `${array[0]}, ${array[1]}, Other`\n//     } else if (array.length > 2) {\n//         return `${array[0]}, ${array[1]}, ${array[2]}`\n//     } else if (array.length > 1) {\n//         return `${array[0]}, ${array[1]}`\n//     }\n//     return `${array[0]}`\n// };\n\n\nfunction clearMoviesContainer() {\n  refs.moviesContainer.innerHTML = '';\n}\n\n","// import '../sass/_visually-hidden.scss';\n// import refs from \"./refs\";\n\n// // приховати loader\n// export function hideLoader() {\n//   refs.loaderRef.loader.classList.add('is-hidden');\n// }\n// // показати loader\n// export function showLoader() {\n//   refs.loaderRef.loader.classList.remove('is-hidden');\n// }\n\n\ndocument.body.onload = function () {\n    setTimeout(function () {\n        const preloader = document.getElementById('preloader');\n        if (!preloader.classList.contains('done')) {\n            preloader.classList.add('done');\n        }\n    }, 800);\n}"],"names":["$2shzp","parcelRequire","document","body","onload","setTimeout","preloader","getElementById","classList","contains","add","$c808da8250b3ec39$var$refs","searchForm","querySelector","inputEl","moviesContainer","errorText","$c808da8250b3ec39$var$searchQuery","addEventListener","async","event","preventDefault","currentTarget","elements","query","value","trim","remove","movies","searchQuery1","$parcel$interopDefault","get","then","response","data","$c808da8250b3ec39$var$fetchSearchMovie","total_pages","innerHTML","$k0Ust","renderMoviesCard","results","addCurrrentMoviesToLocalStorage","console","log","error"],"version":3,"file":"index.697f1ce7.js.map"}