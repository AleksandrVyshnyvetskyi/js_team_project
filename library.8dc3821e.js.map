{"mappings":"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","sources":["src/js/queue-list.js","src/js/pagination.js","src/js/create-markup.js","src/js/local-storage.js"],"sourcesContent":["import Pagination from './pagination.js';\nimport {renderMoviesCard} from \"./create-markup.js\"\n\n\n\nconst pagination = new Pagination;\n\nconst refs = {\n    watched: document.querySelector('.header_btn-watched'),\n    queue: document.querySelector('.header_btn-queue'),\n    containerMovie: document.querySelector('.main-container--card__box'),\n    emptyPage: document.querySelector('.empty_page'),\n    paginationPage: document.querySelector('#section__pagination'),\n};\n\nconst getMovieStorage = localStorage.getItem('QUEUE_LIST');\nconst totalMovieElements = JSON.parse(getMovieStorage);\nconst countElpage = 5;\nlet totalMoviePages = 0;\n\n\nrefs.queue.addEventListener('click', onQueueClick);\n\nif (totalMovieElements === null) {\n  refs.emptyPage.classList.add('visible');\n  refs.paginationPage.style.display = \"none\";\n  return;\n\n} \n\n\n\nfunction onQueueClick(e) {\n    e.preventDefault();\n  refs.containerMovie.innerHTML = '';\n  refs.queue.classList.add('current-btn');\n  refs.watched.classList.remove('current-btn');\n    refs.queue.classList.remove('simple-btn');\n    refs.watched.classList.add('simple-btn');\n    \n  if (totalMovieElements !== null) {\n    try {\n        paginationLibrary()\n       \n        refs.emptyPage.classList.remove('visible');\n\n    } catch (e) {\n      console.log(e);\n    }\n  } else { \n    refs.emptyPage.classList.add('visible');\n    refs.paginationPage.style.display = \"none\";\n    \n    return;\n  }\n}\n\n\nfunction paginationLibrary(page = false) { \n  const queryPage = page ? page : 1; \n  const partMovie = [];\n\n  \n    for (let i = 1; i <= Math.ceil(totalMovieElements.length / countElpage); i += 1) { \n        let end = (countElpage * i);\n        let start = i > 1 ? (countElpage * (i - 1)) : 0;\n        if ((countElpage * i) > totalMovieElements.length) { \n          end = totalMovieElements.length;\n        }\n\n        partMovie[i] = (totalMovieElements.slice(start, end))\n    }\n    \n    totalMoviePages = partMovie.length - 1;\n      refs.containerMovie.innerHTML = \"\";\n    renderMoviesCard(partMovie[queryPage]);\n    \n  if (totalMoviePages > 1) { \n    pagination.setCurrentPage = queryPage;\n    pagination.setTotalPages = totalMoviePages; \n      pagination.setCallback = paginationLibrary; \n      \n    pagination.renderPagination(); \n      \n  }\n  \n}","const containerBox = document.querySelector(`.main-container--card__box`);\nconst pagination = document.querySelector('.pagination');\nconst paginationList = pagination.querySelector('.pagination__list');\nconst paginationPrev = pagination.querySelector('[name=\"prev\"]');\nconst paginationNext = pagination.querySelector('[name=\"next\"]');\nconst sectionPagination = document.getElementById('section__pagination');\n\n\nsectionPagination.style.display = 'none';\n\n\nexport default class Pagination {\n    constructor() {\n        this.currentPage = 1;\n        this.totalPages = 0;\n        this.callback = function () { };\n        this.init();\n    }\n  \n    \n    init() { \n        paginationList.addEventListener('click', this.onClickPages.bind(this));\n        paginationPrev.addEventListener('click', this.onClickBtnPrev.bind(this))\n        paginationNext.addEventListener('click', this.onClickBtnNext.bind(this))\n        window.addEventListener('resize', () => { \n            this.renderPagination();\n        });\n    }\n    // Рендер пагинации\n    renderPagination() { \n        sectionPagination.style.display = 'block';\n        paginationNext.classList.remove('disabled');\n        paginationPrev.classList.remove('disabled');\n\n        \n        // Мобилка\n        if (window.innerWidth < 768) {\n            if (this.currentPage === this.totalPages) {\n                paginationNext.classList.add('disabled')\n            }\n            if (this.currentPage === 1) { \n                paginationPrev.classList.add('disabled')\n            }\n            if (this.totalPages <= 5) { \n                this.createPagination(false, 2, this.totalPages);\n                return;\n            }\n            if (this.totalPages > 5) {\n                if (this.currentPage <= 3) { \n                    this.createPagination(false, 2, 5, false, false);\n                }\n                if (this.currentPage > 3 && this.currentPage < this.totalPages - 1) { \n                    this.createPagination(false, this.currentPage - 2, this.currentPage + 2, false, false, false);\n                    return;\n                }\n                if (this.currentPage > this.totalPages - 2) { \n                    this.createPagination(false, this.totalPages - 5, this.totalPages, false, false, false);\n                } \n            }\n           \n            return;\n        }\n\n        // Десктоп\n        if (this.totalPages === 1) { \n            pagination.classList.add('hidden');\n            return;\n        }\n\n        if (this.totalPages <= 9) { \n            this.createPagination(this.totalPages, 2, this.totalPages - 1);\n            \n        }\n        if (this.totalPages > 9) {\n            if (this.currentPage === 1) {\n                paginationPrev.classList.add('disabled')\n            }\n            if (this.currentPage < 5) {\n                this.createPagination(this.totalPages, 2, 7, false, true);\n                return;\n            }\n            if (this.currentPage > 4 && this.currentPage < this.totalPages - 5) {\n                this.createPagination(this.totalPages, this.currentPage - 2, this.currentPage + 2, true, true);\n                return;\n            }\n            if (this.currentPage !== this.totalPages && this.currentPage > this.totalPages - 6) {\n\n                this.createPagination(this.totalPages, this.totalPages - 6, this.totalPages -1, true, false);\n                return;\n            }\n            if (this.currentPage === this.totalPages) {\n                this.createPagination(this.totalPages, this.currentPage - 6, this.currentPage - 1, true, false);\n                paginationNext.classList.add('disabled')\n                return;\n            }\n\n            \n        }\n     \n    }\n    // Создание пагинации\n    createPagination(lastPage, start, end, leftDots, rightDots, firstPage = 1) { \n        paginationList.innerHTML = '';\n      \n        \n        if (firstPage) { \n             let paginationStart = (this.currentPage === 1) ? ' active' : '';\n             paginationList.insertAdjacentHTML(\"beforeend\", `<button class=\"pagination__link${paginationStart}\" name=\"page\">1</button>`);\n        }\n        \n        if (leftDots) { \n             paginationList.insertAdjacentHTML(\"beforeend\", `<span class=\"pagination__link disabled\">...</span>`); \n        }\n\n\n        for (let i = start; i <= end; i += 1) {\n            let paginationClass = (i == this.currentPage) ? ' active' : '';\n            paginationList.insertAdjacentHTML(\"beforeend\", `<button class=\"pagination__link${paginationClass}\" name=\"page\">${i}</button>`);\n        }\n\n\n        if (rightDots) { \n            \n             paginationList.insertAdjacentHTML(\"beforeend\", `<span class=\"pagination__link disabled\">...</span>`); \n        }\n        if (lastPage) { \n            let paginationEnd = (this.currentPage === this.totalPages) ? ' active' : '';\n            paginationList.insertAdjacentHTML(\"beforeend\", `<button class=\"pagination__link${paginationEnd}\" name=\"page\">${lastPage}</button>`);\n        }\n   \n    }\n\n    // Событие клика по страницам\n    onClickPages(e) { \n       \n        if (e.target.nodeName === 'BUTTON') {\n\n            pagination.classList.add('hidden');\n            // containerBox.innerHTML = '';\n            this.currentPage = e.target.textContent * 1;\n            window.scrollTo({\n                top: 0,\n                behavior: \"smooth\"\n            });\n        \n            this.callback(this.currentPage);\n            \n            \n            pagination.classList.remove('hidden');\n        }\n    };\n    // Событие клика по левой кнопке\n    onClickBtnPrev() { \n         \n        if (this.currentPage > 1) { \n            pagination.classList.add('hidden');\n            // containerBox.innerHTML = '';\n            window.scrollTo({top: 0,behavior: \"smooth\"});\n            this.currentPage -= 1;\n            this.callback(this.currentPage);\n\n            pagination.classList.remove('hidden');\n        }\n    }\n    // Событие клика по правой кнопке\n    onClickBtnNext() {     \n        if (this.currentPage !== this.totalPages) { \n            pagination.classList.add('hidden');\n            // containerBox.innerHTML = '';\n            window.scrollTo({top: 0,behavior: \"smooth\"});\n            this.currentPage += 1;\n            this.callback(this.currentPage);\n \n            pagination.classList.remove('hidden');\n        }\n    }\n\n\n    set setCurrentPage(currentPage) {\n        this.currentPage = currentPage;\n    }\n    set setTotalPages(totalPages) {\n        this.totalPages = totalPages;\n    }\n    set setCallback(callback) {\n        this.callback = callback;\n    }\n}\n\n","import refs from \"./refs\";\nimport { addCurrrentMoviesToLocalStorage } from \"./local-storage\"\n\n\n\nconst IMG_URL = \"https://image.tmdb.org/t/p/w500\"\n\n\n\n\n///////////// --функція для створення карток популярних фільмів на головну сторінку----///////\nfunction renderFilmList(films) {\n    const markup = films\n        .map((film) => {\n//         console.log(film)\n            return `\n            <li class=\"main-container--card\"\n        data-modal-open>\n        <img class=\"card-poster\"\n        data-id=\"${film.id}\" \n        src=\"${film.poster_path === null ? \"https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg\"\n              : `${IMG_URL}${film.poster_path}`\n          }\"\n        alt=\"${film.original_name}\" loading=\"lazy\">\n        <div class=\"card-wrap\">\n        <h2 class=\"card-title\" data-id=\"${film.id}\">${film.original_title.toUpperCase() || film.title.toUpperCase() || film.title.toUpperCase()}</h2>\n        <p class=\"card-info\"> ${transformId(film.genre_ids)} | ${(film.release_date || film.first_air_date).slice(0,4)} </p>\n        </div>\n    </li>`;\n        }).join(\"\");\nrefs.containerBox.innerHTML = markup;\n}\n\nexport {renderFilmList};\n\n///////////// --функція для створення карток  фільмів в MY LIBRARY----///////\nfunction renderMoviesCard(films) {\n    const filmCards = films\n      .map((film) => {\n        if (!film.poster_path) {\n          return `\n        <li class=\"main-container--card\"\n        data-modal-open>\n          <img class=\"card-poster\"\n        data-id=\"${film.id}\" \n        src=\"https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg\" >\n        <div class=\"card-wrap\">\n        <h2 class=\"card-title\" data-id=\"${film.id}\">${film.original_title.toUpperCase() || film.title.toUpperCase() || film.title.toUpperCase()}</h2>\n        <p class=\"card-info\"> ${transformId(film.genre_ids)} | ${(film.release_date || film.first_air_date).slice(0, 4)} <span class=\"card-rating\"> ${film.vote_average.toFixed(1)}</span></p>\n         </div>\n    </li>`;\n        };        \n        return `\n        <li class=\"main-container--card\"\n        data-modal-open>\n          <img class=\"card-poster\"\n        data-id=\"${film.id}\" \n        src=\"${IMG_URL}${film.poster_path}\" \n        alt=\"${film.original_name}\" loading=\"lazy\">\n        <div class=\"card-wrap\">\n        <h2 class=\"card-title\" data-id=\"${film.id}\">${film.original_title.toUpperCase() || film.title.toUpperCase() || film.title.toUpperCase()}</h2>\n        <p class=\"card-info\"> ${transformId(film.genre_ids)} | ${(film.release_date || film.first_air_date).slice(0,4)} <span class=\"card-rating\"> ${film.vote_average.toFixed(1)}</span></p>\n         </div>\n    </li>`;\n        }).join(\"\");\n    \n    refs.moviesContainer.insertAdjacentHTML('beforeend', filmCards);\n    \n};\n\nexport {renderMoviesCard};\n\n\nfunction transformId([...arr]) {\n  const g = localStorage.getItem('GENRES');\n  const genres = JSON.parse(g);\n  let genreName;\n  const array = [...arr];\n  for (let i = 0; i < genres.length; i++) {\n    for (let x = 0; x < array.length; x++) {\n      if (array[x] === genres[i].id) {\n        genreName = genres[i].name;\n        array[x] = genreName;\n      }\n    }\n  }\n  // console.log(array)\n\n  if (array.length > 2 || array.length === 3) {\n    return `${array[0]}, ${array[1]}, Other`;\n  } else if (array.length === 1) {\n        return `${array[0]}`\n  }\n  else if (array.length === 0) {\n    return `No genre`;\n  }\n  return `${array[0]}, ${array[1]}`;\n}\n\n","import refs from \"./refs\";\n\nfunction addCurrrentMoviesToLocalStorage(array) { \nlocalStorage.setItem(\"MOVIE_LIST\", JSON.stringify(array))\n};\n\n\nexport { addCurrrentMoviesToLocalStorage };"],"names":["$2nhTy","parcelRequire","pagination","default","refs","watched","document","querySelector","queue","containerMovie","emptyPage","paginationPage","getMovieStorage","localStorage","getItem","totalMovieElements","JSON","parse","totalMoviePages","addEventListener","e","preventDefault","innerHTML","classList","add","remove","style","display","paginationLibrary","e1","console","log","page","queryPage","partMovie","i","Math","ceil","length","end","start","slice","$k0Ust","renderMoviesCard","setCurrentPage","setTotalPages","setCallback","renderPagination","$1bab9c519cfa82bc$var$pagination","$1bab9c519cfa82bc$var$paginationList","$1bab9c519cfa82bc$var$paginationPrev","$1bab9c519cfa82bc$var$paginationNext","$1bab9c519cfa82bc$var$sectionPagination","getElementById","$1bab9c519cfa82bc$export$2e2bcd8739ae039","init","this","onClickPages","bind","onClickBtnPrev","onClickBtnNext","window","innerWidth","currentPage","totalPages","createPagination","lastPage","leftDots","rightDots","firstPage","paginationStart","insertAdjacentHTML","paginationClass","paginationEnd","target","nodeName","textContent","scrollTo","top","behavior","callback","constructor","$krGWQ","$e91f9a2c1ec35283$export$f2275db3dee9e567","films","markup","map","film","id","poster_path","original_name","original_title","toUpperCase","title","$e91f9a2c1ec35283$var$transformId","genre_ids","release_date","first_air_date","join","containerBox","$e91f9a2c1ec35283$export$f48ccfcd8b08d9f9","filmCards","vote_average","toFixed","moviesContainer","arr","g","genres","genreName","array","x","name","$8125d1701b78b442$export$17c42003be0bef09","setItem","stringify"],"version":3,"file":"library.8dc3821e.js.map"}