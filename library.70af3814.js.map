{"mappings":"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","sources":["src/js/pagination.js","src/js/create-markup.js","src/js/local-storage.js","src/js/loader.js","src/js/queue-list.js"],"sourcesContent":["const containerBox = document.querySelector(`.main-container--card__box`);\nconst pagination = document.querySelector('.pagination');\nconst paginationList = pagination.querySelector('.pagination__list');\nconst paginationPrev = pagination.querySelector('[name=\"prev\"]');\nconst paginationNext = pagination.querySelector('[name=\"next\"]');\nconst sectionPagination = document.getElementById('section__pagination');\n\n\nsectionPagination.style.display = 'none';\n\n\nexport default class Pagination {\n    constructor() {\n        this.currentPage = 1;\n        this.totalPages = 0;\n        this.callback = function () { };\n        this.init();\n    }\n  \n    \n    init() { \n        paginationList.addEventListener('click', this.onClickPages.bind(this));\n        paginationPrev.addEventListener('click', this.onClickBtnPrev.bind(this))\n        paginationNext.addEventListener('click', this.onClickBtnNext.bind(this))\n        window.addEventListener('resize', () => { \n            this.renderPagination();\n        });\n    }\n    // Рендер пагинации\n    renderPagination() { \n        sectionPagination.style.display = 'block';\n        paginationNext.classList.remove('disabled');\n        paginationPrev.classList.remove('disabled');\n\n        \n        // Мобилка\n        if (window.innerWidth < 768) {\n            if (this.currentPage === this.totalPages) {\n                paginationNext.classList.add('disabled')\n            }\n            if (this.currentPage === 1) { \n                paginationPrev.classList.add('disabled')\n            }\n            if (this.totalPages <= 5) { \n                this.createPagination(false, 2, this.totalPages);\n                return;\n            }\n            if (this.totalPages > 5) {\n                if (this.currentPage <= 3) { \n                    this.createPagination(false, 2, 5, false, false);\n                }\n                if (this.currentPage > 3 && this.currentPage < this.totalPages - 1) { \n                    this.createPagination(false, this.currentPage - 2, this.currentPage + 2, false, false, false);\n                    return;\n                }\n                if (this.currentPage > this.totalPages - 2) { \n                    this.createPagination(false, this.totalPages - 5, this.totalPages, false, false, false);\n                } \n            }\n           \n            return;\n        }\n\n        // Десктоп\n        if (this.totalPages === 1) { \n            pagination.classList.add('hidden');\n            return;\n        }\n\n        if (this.totalPages <= 9) { \n            this.createPagination(this.totalPages, 2, this.totalPages - 1);\n            \n        }\n        if (this.totalPages > 9) {\n            if (this.currentPage === 1) {\n                paginationPrev.classList.add('disabled')\n            }\n            if (this.currentPage < 5) {\n                this.createPagination(this.totalPages, 2, 7, false, true);\n                return;\n            }\n            if (this.currentPage > 4 && this.currentPage < this.totalPages - 5) {\n                this.createPagination(this.totalPages, this.currentPage - 2, this.currentPage + 2, true, true);\n                return;\n            }\n            if (this.currentPage !== this.totalPages && this.currentPage > this.totalPages - 6) {\n\n                this.createPagination(this.totalPages, this.totalPages - 6, this.totalPages -1, true, false);\n                return;\n            }\n            if (this.currentPage === this.totalPages) {\n                this.createPagination(this.totalPages, this.currentPage - 6, this.currentPage - 1, true, false);\n                paginationNext.classList.add('disabled')\n                return;\n            }\n\n            \n        }\n     \n    }\n    // Создание пагинации\n    createPagination(lastPage, start, end, leftDots, rightDots, firstPage = 1) { \n        paginationList.innerHTML = '';\n      \n        \n        if (firstPage) { \n             let paginationStart = (this.currentPage === 1) ? ' active' : '';\n             paginationList.insertAdjacentHTML(\"beforeend\", `<button class=\"pagination__link${paginationStart}\" name=\"page\">1</button>`);\n        }\n        \n        if (leftDots) { \n             paginationList.insertAdjacentHTML(\"beforeend\", `<span class=\"pagination__link disabled\">...</span>`); \n        }\n\n\n        for (let i = start; i <= end; i += 1) {\n            let paginationClass = (i == this.currentPage) ? ' active' : '';\n            paginationList.insertAdjacentHTML(\"beforeend\", `<button class=\"pagination__link${paginationClass}\" name=\"page\">${i}</button>`);\n        }\n\n\n        if (rightDots) { \n            \n             paginationList.insertAdjacentHTML(\"beforeend\", `<span class=\"pagination__link disabled\">...</span>`); \n        }\n        if (lastPage) { \n            let paginationEnd = (this.currentPage === this.totalPages) ? ' active' : '';\n            paginationList.insertAdjacentHTML(\"beforeend\", `<button class=\"pagination__link${paginationEnd}\" name=\"page\">${lastPage}</button>`);\n        }\n   \n    }\n\n    // Событие клика по страницам\n    onClickPages(e) { \n       \n        if (e.target.nodeName === 'BUTTON') {\n\n            pagination.classList.add('hidden');\n            // containerBox.innerHTML = '';\n            this.currentPage = e.target.textContent * 1;\n            window.scrollTo({\n                top: 0,\n                behavior: \"smooth\"\n            });\n        \n            this.callbackRun();\n            \n            \n            pagination.classList.remove('hidden');\n        }\n    };\n    // Событие клика по левой кнопке\n    onClickBtnPrev() { \n         \n        if (this.currentPage > 1) { \n            pagination.classList.add('hidden');\n            // containerBox.innerHTML = '';\n            window.scrollTo({top: 0,behavior: \"smooth\"});\n            this.currentPage -= 1;\n            this.callbackRun();\n\n            pagination.classList.remove('hidden');\n        }\n    }\n    // Событие клика по правой кнопке\n    onClickBtnNext() {     \n        if (this.currentPage !== this.totalPages) { \n            pagination.classList.add('hidden');\n            // containerBox.innerHTML = '';\n            window.scrollTo({top: 0,behavior: \"smooth\"});\n            this.currentPage += 1;\n            this.callbackRun();\n \n            pagination.classList.remove('hidden');\n        }\n    }\n\n    callbackRun() { \n        const localCallback = localStorage.getItem('CALLBACK');\n\n        if (localCallback === this.callback.name) { \n            this.callback(this.currentPage)\n        }\n    }\n\n    set setCurrentPage(currentPage) {\n        this.currentPage = currentPage;\n    }\n    set setTotalPages(totalPages) {\n        this.totalPages = totalPages;\n    }\n    set setCallback(callback) {\n        localStorage.setItem('CALLBACK', callback.name)\n        this.callback = callback;\n    }\n}\n\n","// import refs from \"./refs\";\n// import { addCurrrentMoviesToLocalStorage } from \"./local-storage\"\n\n\n\n// const IMG_URL = \"https://image.tmdb.org/t/p/w500\"\n\n\n\n\n// ///////////// --функція для створення карток популярних фільмів на головну сторінку----///////\n// function renderFilmList(films) {\n//   refs.containerBox.innerHTML = '';\n\n//     const markup = films\n//       .map((film) => {\n//             let date = film.release_date ?? film.first_air_date ?? null;\n//             date = (date !== null) ? date.slice(0, 4) : '';\n            \n//             let posterPath = ``\n//             if(film.poster_path){posterPath=`${IMG_URL}${film.poster_path}`}\n//             else{posterPath=\"https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg\"}\n\n//             return `\n//             <li class=\"main-container--card\"\n//         data-modal-open>\n//         <img class=\"card-poster\"\n//         data-id=\"${film.id}\" \n//         src='${posterPath}'\n//         alt=\"${film.original_name}\" loading=\"lazy\">\n//         <div class=\"card-wrap\">\n//         <h2 class=\"card-title\" data-id=\"${film.id}\">${film.original_title.toUpperCase() || film.title.toUpperCase()}</h2>\n//         <p class=\"card-info\"> ${transformId(film.genre_ids)} | ${date} </p>\n//          </div>\n//     </li>`;\n//         }).join(\"\");\n// refs.containerBox.innerHTML = markup;\n// }\n\n// export {renderFilmList};\n\n// ///////////// --функція для створення карток  фільмів в MY LIBRARY----///////\n// function renderMoviesCard(films) {\n//     const filmCards = films\n//       .map((film) => {\n//           let date = film.release_date ?? film.first_air_date ?? null;\n//           date = (date !== null) ? date.slice(0, 4) : '';\n\n//         if (!film.poster_path) {\n//           return `\n//         <li class=\"main-container--card\"\n//         data-modal-open>\n//           <img class=\"card-poster\"\n//         data-id=\"${film.id}\" \n//         src=\"https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg\" >\n//         <div class=\"card-wrap\">\n//         <h2 class=\"card-title\" data-id=\"${film.id}\">${film.original_title.toUpperCase() || film.title.toUpperCase() || film.title.toUpperCase()}</h2>\n//         <p class=\"card-info\"> ${transformId(film.genre_ids)} | ${date} <span class=\"card-rating\"> ${film.vote_average.toFixed(1)}</span></p>\n//          </div>\n//     </li>`;\n//         };        \n\n//         return `\n//         <li class=\"main-container--card\"\n//         data-modal-open>\n//           <img class=\"card-poster\"\n//         data-id=\"${film.id}\" \n//         src=\"${IMG_URL}${film.poster_path}\" \n//         alt=\"${film.original_name}\" loading=\"lazy\">\n//         <div class=\"card-wrap\">\n//         <h2 class=\"card-title\" data-id=\"${film.id}\">${film.original_title.toUpperCase() || film.title.toUpperCase() || film.title.toUpperCase()}</h2>\n//         <p class=\"card-info\"> ${transformId(film.genre_ids)} | ${date} <span class=\"card-rating\"> ${film.vote_average.toFixed(1)}</span></p>\n//          </div>\n//     </li>`;\n//         }).join(\"\");\n    \n//     refs.moviesContainer.insertAdjacentHTML('beforeend', filmCards);\n    \n// };\n\n// export {renderMoviesCard};\n\n\n// function transformId([...arr]) {\n//   const g = localStorage.getItem('GENRES');\n//   const genres = JSON.parse(g);\n//   let genreName;\n//   const array = [...arr];\n//   for (let i = 0; i < genres.length; i++) {\n//     for (let x = 0; x < array.length; x++) {\n//       if (array[x] === genres[i].id) {\n//         genreName = genres[i].name;\n//         array[x] = genreName;\n//       }\n//     }\n//   }\n//   // console.log(array)\n\n//   if (array.length > 2) {\n//     return `${array[0]}, ${array[1]}, Other`;\n//   } else if (array.length === 1) {\n//         return `${array[0]}`\n//   }\n//   else if (array.length === 0) {\n//     return `No genre`;\n//   }\n//   return `${array[0]}, ${array[1]}`;\n// }\n\n\nimport refs from \"./refs\";\nimport { addCurrrentMoviesToLocalStorage } from \"./local-storage\";\n\n\nconst IMG_URL = \"https://image.tmdb.org/t/p/w500\";\n\n\n\n\n///////////// --функція для створення карток популярних фільмів на головну сторінку----///////\nfunction renderFilmList(films) {\n    const markup = films\n        .map((film) => {\n        console.log(film)\n            return `\n            <li class=\"main-container--card\"\n        data-modal-open>\n        <img class=\"card-poster\"\n        data-id=\"${film.id}\" \n        src=\"${film.poster_path === null ? './no_image.jpg'\n              : `${IMG_URL}${film.poster_path}`\n          }\"\n        alt=\"${film.original_name}\" loading=\"lazy\">\n        <div class=\"card-wrap\">\n        <h2 class=\"card-title\" data-id=\"${film.id}\">${film.original_title.toUpperCase() || film.title.toUpperCase() || film.title.toUpperCase()}</h2>\n        <p class=\"card-info\"> ${transformId(film.genre_ids)} | ${(film.release_date || first_air_date).slice(0,4)} </p>\n         </div>\n    </li>`;\n        }).join(\"\");\nrefs.containerBox.innerHTML = markup;\n}\n\nexport {renderFilmList};\n\n///////////// --функція для створення карток  фільмів в MY LIBRARY----///////\nfunction renderMoviesCard(films) {\n    const filmCards = films\n    .map((film) => {\n        return `\n        <li class=\"main-container--card\"\n        data-modal-open>\n        <img class=\"card-poster\"\n        data-id=\"${film.id}\" \n        src=\"${IMG_URL}${film.poster_path}\" \n        alt=\"${film.original_name}\" loading=\"lazy\">\n        <div class=\"card-wrap\">\n        <h2 class=\"card-title\" data-id=\"${film.id}\">${film.original_title.toUpperCase() || film.title.toUpperCase() || film.title.toUpperCase()}</h2>\n        <p class=\"card-info\"> ${transformId(film.genre_ids)} | ${(film.release_date || first_air_date).slice(0,4)} <span class=\"card-rating\"> ${film.vote_average.toFixed(1)}</span></p>\n         </div>\n    </li>`;\n        }).join(\"\");\n    \n    refs.moviesContainer.insertAdjacentHTML('beforeend', filmCards);\n    \n};\n\nexport {renderMoviesCard};\n\n\n///////////// --функція для створення списку жанрів----///////\nfunction transformId ([...arr]) {\n    const g = localStorage.getItem(\"GENRES\");\n    const genres = JSON.parse(g);\n    let genreName;\n    const array = [...arr]\n    for (let i = 0; i < genres.length; i++) {\n        for (let x = 0; x < array.length; x++) {\n            if (array[x] === genres[i].id) {\n                genreName = genres[i].name;\n                array[x] = genreName\n            };\n        };\n    };\n     if (array.length > 2) {\n        return `${array[0]}, ${array[1]}, Other`\n    }\n    return `${array[0]}, ${array[1]}`\n};\n","import refs from \"./refs\";\n\nfunction addCurrrentMoviesToLocalStorage(array) { \nlocalStorage.setItem(\"MOVIE_LIST\", JSON.stringify(array))\n};\n\n\nexport { addCurrrentMoviesToLocalStorage };\n\n\n// export function addCurrrentMoviesToLocalStorage(array) { \n// localStorage.setItem(\"MOVIE_LIST\", JSON.stringify(array))\n// }\n\n// export default class LocalStorage { \n//     constructor(){ \n//         this.watched = [];\n//         this.queue = [];\n//     }\n\n//     addToLSwathced(key) { \n//       localStorage.setItem(key, JSON.stringify(this.watched));\n//     }\n//    addToLSqueue (key) { \n//       localStorage.setItem(key, JSON.stringify(this.queue));\n//     }\n\n// };\n\n\n\n","//  Для встановлення Loader потрібно:\n// 1. Експортуємо функції у свій файл.\n\n//  import { preloaderShow, preloaderShowLonger, hidePreloader } from './loader';\n\n// 2. Ставимо функцію запуску лоадеру на початок події (завантаження файлів, рендер бібліотеки, пошук фільмів).\n\n// preloaderShowLonger();   - виключається сама  після 700мс після запуску,\n\n// preloaderShow();  виключається тільки після запуску  функції hidePreloader();\n\n// 3. Ставимо функцію зняття лоадеру на закінчення події (завантаження файлів, рендер бібліотеки, пошук фільмів)\n\n// hidePreloader();\n\n\nconst preloader = document.getElementById('preloader');\nconst loadder = document.querySelector('.loader')\n\nfunction preloaderShow() {\n    preloader.classList.add('is-open');\n    loadder.classList.add('is-open');\n    };\n\n\n\n  function hidePreloader() {\n    preloader.classList.remove('is-open');\n    loadder.classList.remove('is-open');\n  };\n\n\n  function preloaderShowLonger() {\n    preloader.classList.add('is-open');\n    loadder.classList.add('is-open');\n    setTimeout(function () {\n      preloader.classList.remove('is-open');\n      loadder.classList.remove('is-open');\n    }, 700);\n};\n\n  export { preloaderShow, preloaderShowLonger, hidePreloader };\n","import Pagination from './pagination.js';\nimport {renderMoviesCard} from \"./create-markup.js\"\nimport { preloaderShowLonger } from './loader';\n\n\n\nconst pagination = new Pagination;\n\nconst refs = {\n    watched: document.querySelector('.header_btn-watched'),\n    queue: document.querySelector('.header_btn-queue'),\n    containerMovie: document.querySelector('.main-container--card__box'),\n    emptyPage: document.querySelector('.empty_page'),\n    paginationPage: document.querySelector('#section__pagination'),\n};\n\nconst getMovieStorage = localStorage.getItem('QUEUE_LIST');\nconst totalMovieElements = JSON.parse(getMovieStorage);\nconst countElpage = 10;\nlet totalMoviePages = 0;\n\n\nrefs.queue.addEventListener('click', onQueueClick);\n\n// if (totalMovieElements.length === 0) {\n//   refs.emptyPage.classList.add('visible');\n//   refs.paginationPage.style.display = \"none\";\n//   return;\n\n// } \n\n\n\nfunction onQueueClick(e) {\n    e.preventDefault();\n  refs.containerMovie.innerHTML = '';\n  refs.queue.classList.add('current-btn');\n  refs.watched.classList.remove('current-btn');\n    refs.queue.classList.remove('simple-btn');\n    refs.watched.classList.add('simple-btn');\n    \n  if (totalMovieElements.length !== 0) {\n    try {\n        paginationLibrary()\n       \n        refs.emptyPage.classList.remove('visible');\n\n    } catch (e) {\n      console.log(e);\n    }\n  } else { \n    refs.emptyPage.classList.add('visible');\n    refs.paginationPage.style.display = \"none\";\n    \n    return;\n  }\n}\n\n\nfunction paginationLibrary(page = false) { \n  preloaderShowLonger();\n  const queryPage = page ? page : 1; \n  const partMovie = [];\n\n  \n    for (let i = 1; i <= Math.ceil(totalMovieElements.length / countElpage); i += 1) { \n        let end = (countElpage * i);\n        let start = i > 1 ? (countElpage * (i - 1)) : 0;\n        if ((countElpage * i) > totalMovieElements.length) { \n          end = totalMovieElements.length;\n        }\n\n        partMovie[i] = (totalMovieElements.slice(start, end))\n    }\n    \n    totalMoviePages = partMovie.length - 1;\n      refs.containerMovie.innerHTML = \"\";\n    renderMoviesCard(partMovie[queryPage]);\n    \n  if (totalMoviePages > 1) { \n    pagination.setCurrentPage = queryPage;\n    pagination.setTotalPages = totalMoviePages; \n      pagination.setCallback = paginationLibrary; \n      \n    pagination.renderPagination(); \n      \n  }\n  \n}"],"names":["document","querySelector","$1bab9c519cfa82bc$var$pagination","$1bab9c519cfa82bc$var$paginationList","$1bab9c519cfa82bc$var$paginationPrev","$1bab9c519cfa82bc$var$paginationNext","$1bab9c519cfa82bc$var$sectionPagination","getElementById","style","display","$1bab9c519cfa82bc$export$2e2bcd8739ae039","init","addEventListener","this","onClickPages","bind","onClickBtnPrev","onClickBtnNext","window","renderPagination","classList","remove","innerWidth","currentPage","totalPages","add","createPagination","lastPage","start","end","leftDots","rightDots","firstPage","innerHTML","paginationStart","insertAdjacentHTML","i","paginationClass","paginationEnd","e","target","nodeName","textContent","scrollTo","top","behavior","callbackRun","localStorage","getItem","callback","name","setCurrentPage","setTotalPages","setCallback","setItem","constructor","$krGWQ","parcelRequire","$e91f9a2c1ec35283$export$f2275db3dee9e567","films","markup","map","film","console","log","id","poster_path","original_name","original_title","toUpperCase","title","$e91f9a2c1ec35283$var$transformId","genre_ids","release_date","first_air_date","slice","join","default","containerBox","$e91f9a2c1ec35283$export$f48ccfcd8b08d9f9","filmCards","vote_average","toFixed","moviesContainer","arr","g","genres","JSON","parse","genreName","array","length","x","$8125d1701b78b442$export$17c42003be0bef09","stringify","$bdfcdc80b4c38739$var$preloader","$bdfcdc80b4c38739$var$loadder","$bdfcdc80b4c38739$export$c8b0c55c24870a90","$bdfcdc80b4c38739$export$e0ccb1a4f1e8a222","$bdfcdc80b4c38739$export$6501e38a6603ea9e","setTimeout","$2nhTy","$8041263fb52134b3$var$pagination","$8041263fb52134b3$var$refs","watched","queue","containerMovie","emptyPage","paginationPage","$8041263fb52134b3$var$getMovieStorage","$8041263fb52134b3$var$totalMovieElements","$8041263fb52134b3$var$totalMoviePages","$8041263fb52134b3$var$paginationLibrary","page","$gjiCh","preloaderShowLonger","queryPage","partMovie","Math","ceil","$k0Ust","renderMoviesCard","preventDefault","e1"],"version":3,"file":"library.70af3814.js.map"}