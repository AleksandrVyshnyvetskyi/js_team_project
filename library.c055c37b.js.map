{"mappings":"imBAAA,IAAAA,EAAAC,EAAA,S,aAGA,MAAMC,EAAa,IAAI,EAAAF,EAAAG,SAEjBC,EAAO,CACTC,QAASC,SAASC,cAAc,sBAChCC,MAAOF,SAASC,cAAc,oBAC9BE,eAAgBH,SAASC,cAAc,8BACvCG,UAAWJ,SAASC,cAAc,gBAGhCI,EAAkBC,aAAaC,QAAQ,cACvCC,EAAqBC,KAAKC,MAAML,GAChCM,EAAc,GACpB,IAAIC,EAAkB,EAMtB,GAJAd,EAAKC,QAAQc,iBAAiB,SAW9B,SAAwBC,GAKtB,GAJAA,EAAEC,iBACFjB,EAAKC,QAAQiB,UAAUC,IAAI,eAC3BnB,EAAKI,MAAMc,UAAUE,OAAO,gBAExBV,EAOF,OAAOV,EAAKM,UAAUY,UAAUC,IAAI,WANpC,KAeJ,SAA2BE,GAAO,GAChC,MAAMC,EAAYD,GAAc,EAC1BE,EAAY,GAElB,GAAIT,EAAkB,EAAG,CACvB,IAAK,IAAIU,EAAI,EAAGA,GAAKC,KAAKC,KAAKhB,EAAmBiB,OAASd,GAAcW,GAAK,EAAG,CAC7E,IAAII,EAAOf,EAAcW,EACrBK,EAAQL,EAAI,EAAKX,GAAeW,EAAI,GAAM,EAC1CX,EAAeW,EAAKd,EAAmBiB,SACzCC,EAAMlB,EAAmBiB,QAG3BJ,EAAUC,GAAMd,EAAmBoB,MAAMD,EAAOD,E,CAGpDd,EAAkBS,EAAUI,OAAS,GAGrC,EAAAI,EAAAC,kBAAiBT,EAAUD,IAE3BxB,EAAWmC,eAAiBX,EAC5BxB,EAAWoC,cAAgBpB,EAC3BhB,EAAWqC,YAAcC,WACzBtC,EAAWuC,kB,EArCTC,E,CACA,MAAOC,GACPC,QAAQC,IAAIF,E,KAhBd7B,EAAmBiB,OAAS,EAC9B,OAAO3B,EAAKM,UAAUY,UAAUC,IAAI,U,oFCtBtC,MAAMuB,EAAexC,SAASC,cAAc,8BACtCwC,EAAazC,SAASC,cAAc,eACpCyC,EAAiBD,EAAWxC,cAAc,qBAC1C0C,EAAiBF,EAAWxC,cAAc,iBAC1C2C,EAAiBH,EAAWxC,cAAc,iBAC1C4C,EAAoB7C,SAAS8C,eAAe,uBAGlDD,EAAkBE,MAAMC,QAAU,OAGnB,MAAMC,EASjBC,OACIR,EAAe7B,iBAAiB,QAASsC,KAAKC,aAAaC,KAAKF,OAChER,EAAe9B,iBAAiB,QAASsC,KAAKG,eAAeD,KAAKF,OAClEP,EAAe/B,iBAAiB,QAASsC,KAAKI,eAAeF,KAAKF,OAClEK,OAAO3C,iBAAiB,UAAU,KAC9BsC,KAAKhB,kBAAkB,G,CAIhBA,mBAOJ,GANPU,EAAkBE,MAAMC,QAAU,QAClCJ,EAAe5B,UAAUE,OAAO,YAChCyB,EAAe3B,UAAUE,OAAO,YAI5BsC,OAAOC,WAAa,IAAjB,CAOH,GANIN,KAAKO,cAAgBP,KAAKQ,YAC1Bf,EAAe5B,UAAUC,IAAI,YAER,IAArBkC,KAAKO,aACLf,EAAe3B,UAAUC,IAAI,YAE7BkC,KAAKQ,YAAc,EAEnB,YADAR,KAAKS,kBAAiB,EAAO,EAAGT,KAAKQ,YAGzC,GAAIR,KAAKQ,WAAa,EAAG,CAIrB,GAHIR,KAAKO,aAAe,GACpBP,KAAKS,kBAAiB,EAAO,EAAG,GAAG,GAAO,GAE1CT,KAAKO,YAAc,GAAKP,KAAKO,YAAcP,KAAKQ,WAAa,EAE7D,YADAR,KAAKS,kBAAiB,EAAOT,KAAKO,YAAc,EAAGP,KAAKO,YAAc,GAAG,GAAO,GAAO,GAGvFP,KAAKO,YAAcP,KAAKQ,WAAa,GACrCR,KAAKS,kBAAiB,EAAOT,KAAKQ,WAAa,EAAGR,KAAKQ,YAAY,GAAO,GAAO,E,OAQtF,GAAiB,IAApBR,KAAKQ,YAST,GAJIR,KAAKQ,YAAc,GACnBR,KAAKS,iBAAiBT,KAAKQ,WAAY,EAAGR,KAAKQ,WAAa,GAG5DR,KAAKQ,WAAa,EAAG,CAIrB,GAHyB,IAArBR,KAAKO,aACLf,EAAe3B,UAAUC,IAAI,YAE7BkC,KAAKO,YAAc,EAEnB,YADAP,KAAKS,iBAAiBT,KAAKQ,WAAY,EAAG,GAAG,GAAO,GAGxD,GAAIR,KAAKO,YAAc,GAAKP,KAAKO,YAAcP,KAAKQ,WAAa,EAE7D,YADAR,KAAKS,iBAAiBT,KAAKQ,WAAYR,KAAKO,YAAc,EAAGP,KAAKO,YAAc,GAAG,GAAM,GAG7F,GAAIP,KAAKO,cAAgBP,KAAKQ,YAAcR,KAAKO,YAAcP,KAAKQ,WAAa,EAG7E,YADAR,KAAKS,iBAAiBT,KAAKQ,WAAYR,KAAKQ,WAAa,EAAGR,KAAKQ,WAAY,GAAG,GAAM,GAG1F,GAAIR,KAAKO,cAAgBP,KAAKQ,WAG1B,OAFAR,KAAKS,iBAAiBT,KAAKQ,WAAYR,KAAKO,YAAc,EAAGP,KAAKO,YAAc,GAAG,GAAM,QACzFd,EAAe5B,UAAUC,IAAI,W,OA3BjCwB,EAAWzB,UAAUC,IAAI,S,CAoChB2C,iBAAAC,EAAUlC,EAAOD,EAAKoC,EAAUC,EAAWC,EAAY,GAIpE,GAHAtB,EAAeuB,UAAY,GAGvBD,EAAW,CACV,IAAIE,EAAwC,IAAtBf,KAAMO,YAAqB,UAAY,GAC7DhB,EAAeyB,mBAAmB,YAAa,kCAAkCD,4B,CAGlFJ,GACCpB,EAAeyB,mBAAmB,YAAa,sDAIpD,IAAK,IAAI7C,EAAIK,EAAOL,GAAKI,EAAKJ,GAAK,EAAG,CAClC,IAAI8C,EAAkB9C,GAAM6B,KAAKO,YAAe,UAAY,GAC5DhB,EAAeyB,mBAAmB,YAAa,kCAAkCC,kBAAgC9C,a,CAQrH,GAJIyC,GAECrB,EAAeyB,mBAAmB,YAAa,sDAEhDN,EAAU,CACV,IAAIQ,EAAgBlB,KAAMO,cAAgBP,KAAKQ,WAAc,UAAY,GACzEjB,EAAeyB,mBAAmB,YAAa,kCAAkCE,kBAA8BR,a,EAMhGT,aAAVtC,GAEiB,WAAtBA,EAAEwD,OAAOC,WAET9B,EAAWzB,UAAUC,IAAI,UACzBuB,EAAayB,UAAY,GACzBd,KAAKO,YAAqC,EAAvB5C,EAAEwD,OAAOE,YAC5BhB,OAAOiB,SAAS,CACZC,IAAK,EACLC,SAAU,WAGdxB,KAAKyB,SAASzB,KAAKO,aAGnBjB,EAAWzB,UAAUE,OAAO,U,CAIXoC,iBAEjBH,KAAKO,YAAc,IACnBjB,EAAWzB,UAAUC,IAAI,UACzBuB,EAAayB,UAAY,GACzBT,OAAOiB,SAAS,CAACC,IAAK,EAAEC,SAAU,WAClCxB,KAAKO,aAAe,EACpBP,KAAKyB,SAASzB,KAAKO,aAEnBjB,EAAWzB,UAAUE,OAAO,U,CAIpCqC,iBACQJ,KAAKO,cAAgBP,KAAKQ,aAC1BlB,EAAWzB,UAAUC,IAAI,UACzBuB,EAAayB,UAAY,GACzBT,OAAOiB,SAAS,CAACC,IAAK,EAAEC,SAAU,WAClCxB,KAAKO,aAAe,EACpBP,KAAKyB,SAASzB,KAAKO,aAEnBjB,EAAWzB,UAAUE,OAAO,U,CAKhCa,mBAAe2B,GACfP,KAAKO,YAAcA,C,CAEnB1B,kBAAc2B,GACdR,KAAKQ,WAAaA,C,CAElB1B,gBAAY2C,GACZzB,KAAKyB,SAAWA,C,CA7KpBC,cACI1B,KAAKO,YAAc,EACnBP,KAAKQ,WAAa,EAClBR,KAAKyB,SAAW,WAAY,EAC5BzB,KAAKD,M,oJChBb,IAAA4B,EAAAnF,EAAA,S,WAU2D,SAAlDoF,EAAeC,GACpB,MAAMC,EAASD,EACVE,KAAKC,IACN7C,QAAQC,IAAI4C,GACD,gIAIAA,EAAKC,sBACY,OAArBD,EAAKE,YAAuB,iBAC3B,kCAAaF,EAAKE,gCAEnBF,EAAKG,4GAEsBH,EAAKC,OAAOD,EAAKI,eAAeC,eAAiBL,EAAKM,MAAMD,eAAiBL,EAAKM,MAAMD,qDAClGE,EAAYP,EAAKQ,iBAAiBR,EAAKS,cAAgBC,gBAAgBjE,MAAM,EAAE,yCAGpGkE,KAAK,IAChBhB,EAAAjF,QAAKkG,aAAa9B,UAAYgB,C,CAMG,SAAxBe,EAAiBhB,GACtB,MAAMiB,EAAYjB,EACjBE,KAAKC,GACK,4HAIIA,EAAKC,qDACCD,EAAKE,+BACfF,EAAKG,4GAEsBH,EAAKC,OAAOD,EAAKI,eAAeC,eAAiBL,EAAKM,MAAMD,eAAiBL,EAAKM,MAAMD,qDAClGE,EAAYP,EAAKQ,iBAAiBR,EAAKS,cAAgBC,gBAAgBjE,MAAM,EAAE,iCAAiCuD,EAAKe,aAAaC,QAAQ,8CAG/JL,KAAK,IAEZhB,EAAAjF,QAAKuG,gBAAgBjC,mBAAmB,YAAa8B,E,CAQzD,SAASP,MAAiBW,IACtB,MAAMC,EAAIhG,aAAaC,QAAQ,UACzBgG,EAAS9F,KAAKC,MAAM4F,GAC1B,IAAIE,EACJ,MAAMC,EAAQ,IAAIJ,GAClB,IAAK,IAAI/E,EAAI,EAAGA,EAAIiF,EAAO9E,OAAQH,IAC/B,IAAK,IAAIoF,EAAI,EAAGA,EAAID,EAAMhF,OAAQiF,IAC1BD,EAAMC,KAAOH,EAAOjF,GAAG8D,KACvBoB,EAAYD,EAAOjF,GAAGqF,KACtBF,EAAMC,GAAKF,GAMvB,OADAlE,QAAQC,IAAIkE,GACRA,EAAMhF,OAAS,EAER,GAAGgF,EAAM,OAAOA,EAAM,YACtBA,EAAMhF,OAAS,EACf,GAAGgF,EAAM,OAAOA,EAAM,OAAOA,EAAM,KACnCA,EAAMhF,OAAS,EAChB,GAAGgF,EAAM,OAAOA,EAAM,KAEzB,GAAGA,EAAM,I,qFCnFpB,IAAAG,EAAe,CAEbb,aAAc/F,SAASC,cAAc,8BACrC4G,cAAe7G,SAASC,cAAc,yBACtC6G,YAAa9G,SAASC,cAAc,uBACpCmG,gBAAiBpG,SAASC,cAAc,8BACxC8G,UAAW/G,SAASC,cAAc,qBAClC+G,OAAQhH,SAASC,cAAc,cAI/BgH,WAAYjH,SAASC,cAAc,4BACnCiH,UAAWlH,SAASC,cAAc,8BAClCkH,MAAOnH,SAASC,cAAc,gBAC9BmH,eAAgBpH,SAASC,cAAc,UACvCoH,aAAcrH,SAASC,cAAc,kB,sCCbvC,SAASqH,EAAgCb,GACzCnG,aAAaiH,QAAQ,aAAc9G,KAAK+G,UAAUf,G,uEAHlD9G,EAAA,Q","sources":["src/js/libraryList.js","src/js/pagination.js","src/js/create-markup.js","src/js/refs.js","src/js/local-storage.js"],"sourcesContent":["import Pagination from './pagination.js';\nimport { renderMoviesCard } from \"./create-markup\"\n\nconst pagination = new Pagination;\n\nconst refs = {\n    watched: document.querySelector('.js-button-watched'),\n    queue: document.querySelector('.js-button-queue'),\n    containerMovie: document.querySelector('.main-container--card__box'),\n    emptyPage: document.querySelector('.empty_page'),\n};\n\nconst getMovieStorage = localStorage.getItem('MOVIE_LIST');\nconst totalMovieElements = JSON.parse(getMovieStorage);\nconst countElpage = 10;\nlet totalMoviePages = 0;\n\nrefs.watched.addEventListener('click', onWatchedClick);\n// refs.queue.addEventListener('click', onQueueClick);\n\n\nif (totalMovieElements.length < 1) { \n  return refs.emptyPage.classList.add('visible');\n}\n\n\n\n\nfunction onWatchedClick(e) {\n  e.preventDefault();\n  refs.watched.classList.add('current-btn');\n  refs.queue.classList.remove('current-btn');\n    \n  if (totalMovieElements) {\n    try {\n      paginationLibrary()\n    } catch (e) {\n      console.log(e);\n    }\n  } else { \n    return refs.emptyPage.classList.add('visible');\n  }\n\n  \n \n  \n}\n\n\nfunction paginationLibrary(page = false) { \n  const queryPage = page ? page : 1; \n  const partMovie = [];\n\n  if (totalMoviePages > 1) { \n    for (let i = 1; i <= Math.ceil(totalMovieElements.length / countElpage); i += 1) { \n        let end = (countElpage * i);\n        let start = i > 1 ? (countElpage * (i - 1)) : 0;\n        if ((countElpage * i) > totalMovieElements.length) { \n          end = totalMovieElements.length;\n        }\n\n        partMovie[i] = (totalMovieElements.slice(start, end))\n    }\n    \n    totalMoviePages = partMovie.length - 1;\n  \n  \n    renderMoviesCard(partMovie[queryPage])\n\n    pagination.setCurrentPage = queryPage;\n    pagination.setTotalPages = totalMoviePages; \n    pagination.setCallback = pagLibrary; \n    pagination.renderPagination(); \n      \n  }\n  \n}\n\n\n\n\n\n\n// function getPopularMovie(page = false) { \n//     const queryPage = page ? page : 1; // Проверка страниц, обязательно до fetch\n//     apiService.setPageNumber = queryPage; // Передает текущую страницу в класс api\n\n//     apiService.fetchPopularMovie().then(data => {\n\n//         pagination.setCurrentPage = queryPage; // Передает страницу в пагинатор\n//         pagination.setTotalPages = data.total_pages; // Передает общее кол-во страниц в пагинатор\n//         pagination.setCallback = getPopularMovie; // Передает ссылку на коллбэк функцию \n//         pagination.renderPagination(); // Вызов пагинации\n\n//         renderFilmList(data.results); \n//     }\n        \n// );\n// }\n\n\n// const refs = {\n//     watched: document.querySelector('.js-button-watched'),\n//     queue: document.querySelector('.js-button-queue'),\n//     container: document.querySelector('.films__list'),\n// };\n// let data = {\n//   page: 1,\n//   results: [],\n// };\n\n// let queueKey;\n// let watchedKey;\n// let isActiveKey;\n\n// refs.watched.addEventListener('click', onWatchedClick);\n// refs.queue.addEventListener('click', onQueueClick);\n\n// function onWatchedClick(e) {\n//   e.preventDefault();\n//   refs.watched.classList.add('header__button--active');\n//   refs.queue.classList.remove('header__button--active');\n//   // localStorage.setItem('isActive', 'watched'); // Необходимо сверить название класса просмотренных фильмов\n//   watchedKey = localStorage.getItem('MOVIE_LIST'); // Необходимо сверить название класса просмотренных фильмов\n\n  \n//   if (watchedKey) {\n//     try {\n//       data = JSON.parse(watchedKey);\n//       console.log(data)\n//     } catch (e) {\n//       console.log(e);\n//     }\n//   }\n//   markup(data);\n// }\n\n// function onQueueClick(e) {\n//   e.preventDefault();\n//   refs.queue.classList.add('link-current');\n//   refs.watched.classList.remove('link-current');\n//   localStorage.setItem('isActive', 'queue'); // Необходимо проверить название класса фильмов из очереди\n//   queueKey = localStorage.getItem('queue'); // Необходимо проверить название класса фильмов из очереди\n//   if (queueKey) {\n//     try {\n//       data = JSON.parse(queueKey);\n//     } catch (e) {\n//       console.log(e);\n//     }\n//   }\n//   markup(data);\n// }\n\n// function libraryMarkup() {\n// //   refs.paginationList.style.display = 'none';\n//   localStorage.setItem('isActive', 'watched');\n//   isActiveKey = localStorage.getItem('isActive');\n\n//   if (isActiveKey) {\n//     if (isActiveKey === 'queue') {\n//       refs.queue.classList.add('header__button--active');\n//       refs.watched.classList.remove('header__button--active');\n//       queueKey = localStorage.getItem('queue');\n//       if (queueKey) {\n//         try {\n//           data = JSON.parse(queueKey);\n//         } catch (e) {\n//           console.log(e);\n//         }\n//       } else {\n//         localStorage.setItem('queue', JSON.stringify(data));\n//       }\n//     } else {\n//       refs.watched.classList.add('header__button--active');\n//       refs.queue.classList.remove('header__button--active');\n//       watchedKey = localStorage.getItem('watched');\n//       if (watchedKey) {\n//         try {\n//           data = JSON.parse(watchedKey);\n//         } catch (e) {\n//           console.log(e);\n//         }\n//       } else {\n//         localStorage.setItem('watched', JSON.stringify(data));\n//       }\n//     }\n//   } else {\n//     isActiveKey = 'watched';\n//     localStorage.setItem('isActive', isActiveKey);\n//     refs.watched.classList.add('header__button--active');\n//     refs.queue.classList.remove('header__button--active');\n//     localStorage.setItem('watched', JSON.stringify(data));\n//     localStorage.setItem('queue', JSON.stringify(data));\n//   }\n\n//   markup(data);\n// }\n\n// function markup(data) {\n//   refs.container.innerHTML = '';\n\n//   const markup = data\n//     .map((d) => {\n//       return `\n//         <li class=\"films__item\">\n//             <img class=\"films__poster\" src=\"https://image.tmdb.org/t/p/w500${d.poster_path}\" alt=\"${d.original_title}\" loading=\"lazy\">\n//             <div class=\"films__info\">\n//               <h2 class=\"films__title\">${d.original_title.toUpperCase()}</h2>\n//               <p class=\"films__more-info\"> ${transformId(d.genre_ids)} | ${d.release_date.slice(0, 4)}</p>\n//             </div>\n//         </li>`});\n  \n\n\n//   refs.container.insertAdjacentHTML(\n//     'beforeend', markup);\n \n\n//   if (data.length > 0) {\n//     // galleryArrayMarkup(data);\n//     // modalOpenOnClick();\n//   } else {\n    \n//   }\n// }\n\n// function transformId ([...arr]) {\n//     const g = localStorage.getItem(\"GENRES\");\n//     const genres = JSON.parse(g);\n//     let genreName;\n//     const array = [...arr]\n//     // console.log(genres)\n//     for (let i = 0; i < genres.length; i++) {\n//         // console.log(genres[i]);\n//         for (let x = 0; x < array.length; x++) {\n//             if (array[x] === genres[i].id) {\n//                 genreName = genres[i].name;\n//                 array[x] = genreName\n//             };\n//         };\n//     };\n//     console.log(array)\n//     if (array.length > 2) {\n//         return `${array[0]}, ${array[1]}, Other`\n//     }\n//     return `${array[0]}, ${array[1]}`\n// };\n// // export { libraryMarkup, markup };","const containerBox = document.querySelector(`.main-container--card__box`);\nconst pagination = document.querySelector('.pagination');\nconst paginationList = pagination.querySelector('.pagination__list');\nconst paginationPrev = pagination.querySelector('[name=\"prev\"]');\nconst paginationNext = pagination.querySelector('[name=\"next\"]');\nconst sectionPagination = document.getElementById('section__pagination');\n\n\nsectionPagination.style.display = 'none';\n\n\nexport default class Pagination {\n    constructor() {\n        this.currentPage = 1;\n        this.totalPages = 0;\n        this.callback = function () { };\n        this.init();\n    }\n  \n    \n    init() { \n        paginationList.addEventListener('click', this.onClickPages.bind(this));\n        paginationPrev.addEventListener('click', this.onClickBtnPrev.bind(this))\n        paginationNext.addEventListener('click', this.onClickBtnNext.bind(this))\n        window.addEventListener('resize', () => { \n            this.renderPagination();\n        });\n    }\n    // Рендер пагинации\n    renderPagination() { \n        sectionPagination.style.display = 'block';\n        paginationNext.classList.remove('disabled');\n        paginationPrev.classList.remove('disabled');\n\n        \n        // Мобилка\n        if (window.innerWidth < 768) {\n            if (this.currentPage === this.totalPages) {\n                paginationNext.classList.add('disabled')\n            }\n            if (this.currentPage === 1) { \n                paginationPrev.classList.add('disabled')\n            }\n            if (this.totalPages <= 5) { \n                this.createPagination(false, 2, this.totalPages);\n                return;\n            }\n            if (this.totalPages > 5) {\n                if (this.currentPage <= 3) { \n                    this.createPagination(false, 2, 5, false, false);\n                }\n                if (this.currentPage > 3 && this.currentPage < this.totalPages - 1) { \n                    this.createPagination(false, this.currentPage - 2, this.currentPage + 2, false, false, false);\n                    return;\n                }\n                if (this.currentPage > this.totalPages - 2) { \n                    this.createPagination(false, this.totalPages - 5, this.totalPages, false, false, false);\n                } \n            }\n           \n            return;\n        }\n\n        // Десктоп\n        if (this.totalPages === 1) { \n            pagination.classList.add('hidden');\n            return;\n        }\n\n        if (this.totalPages <= 9) { \n            this.createPagination(this.totalPages, 2, this.totalPages - 1);\n            \n        }\n        if (this.totalPages > 9) {\n            if (this.currentPage === 1) {\n                paginationPrev.classList.add('disabled')\n            }\n            if (this.currentPage < 5) {\n                this.createPagination(this.totalPages, 2, 7, false, true);\n                return;\n            }\n            if (this.currentPage > 4 && this.currentPage < this.totalPages - 5) {\n                this.createPagination(this.totalPages, this.currentPage - 2, this.currentPage + 2, true, true);\n                return;\n            }\n            if (this.currentPage !== this.totalPages && this.currentPage > this.totalPages - 6) {\n\n                this.createPagination(this.totalPages, this.totalPages - 6, this.totalPages -1, true, false);\n                return;\n            }\n            if (this.currentPage === this.totalPages) {\n                this.createPagination(this.totalPages, this.currentPage - 6, this.currentPage - 1, true, false);\n                paginationNext.classList.add('disabled')\n                return;\n            }\n\n            \n        }\n     \n    }\n    // Создание пагинации\n    createPagination(lastPage, start, end, leftDots, rightDots, firstPage = 1) { \n        paginationList.innerHTML = '';\n      \n        \n        if (firstPage) { \n             let paginationStart = (this.currentPage === 1) ? ' active' : '';\n             paginationList.insertAdjacentHTML(\"beforeend\", `<button class=\"pagination__link${paginationStart}\" name=\"page\">1</button>`);\n        }\n        \n        if (leftDots) { \n             paginationList.insertAdjacentHTML(\"beforeend\", `<span class=\"pagination__link disabled\">...</span>`); \n        }\n\n\n        for (let i = start; i <= end; i += 1) {\n            let paginationClass = (i == this.currentPage) ? ' active' : '';\n            paginationList.insertAdjacentHTML(\"beforeend\", `<button class=\"pagination__link${paginationClass}\" name=\"page\">${i}</button>`);\n        }\n\n\n        if (rightDots) { \n            \n             paginationList.insertAdjacentHTML(\"beforeend\", `<span class=\"pagination__link disabled\">...</span>`); \n        }\n        if (lastPage) { \n            let paginationEnd = (this.currentPage === this.totalPages) ? ' active' : '';\n            paginationList.insertAdjacentHTML(\"beforeend\", `<button class=\"pagination__link${paginationEnd}\" name=\"page\">${lastPage}</button>`);\n        }\n   \n    }\n\n    // Событие клика по страницам\n    onClickPages(e) { \n       \n        if (e.target.nodeName === 'BUTTON') {\n\n            pagination.classList.add('hidden');\n            containerBox.innerHTML = '';\n            this.currentPage = e.target.textContent * 1;\n            window.scrollTo({\n                top: 0,\n                behavior: \"smooth\"\n            });\n        \n            this.callback(this.currentPage);\n            \n            \n            pagination.classList.remove('hidden');\n        }\n    };\n    // Событие клика по левой кнопке\n    onClickBtnPrev() { \n         \n        if (this.currentPage > 1) { \n            pagination.classList.add('hidden');\n            containerBox.innerHTML = '';\n            window.scrollTo({top: 0,behavior: \"smooth\"});\n            this.currentPage -= 1;\n            this.callback(this.currentPage);\n\n            pagination.classList.remove('hidden');\n        }\n    }\n    // Событие клика по правой кнопке\n    onClickBtnNext() {     \n        if (this.currentPage !== this.totalPages) { \n            pagination.classList.add('hidden');\n            containerBox.innerHTML = '';\n            window.scrollTo({top: 0,behavior: \"smooth\"});\n            this.currentPage += 1;\n            this.callback(this.currentPage);\n \n            pagination.classList.remove('hidden');\n        }\n    }\n\n\n    set setCurrentPage(currentPage) {\n        this.currentPage = currentPage;\n    }\n    set setTotalPages(totalPages) {\n        this.totalPages = totalPages;\n    }\n    set setCallback(callback) {\n        this.callback = callback;\n    }\n}\n\n","import refs from \"./refs\";\nimport { addCurrrentMoviesToLocalStorage } from \"./local-storage\"\n\n\nconst IMG_URL = \"https://image.tmdb.org/t/p/w500\"\n\n\n\n\n///////////// --функція для створення карток популярних фільмів на головну сторінку----///////\nfunction renderFilmList(films) {\n    const markup = films\n        .map((film) => {\n        console.log(film)\n            return `\n            <li class=\"main-container--card\"\n        data-modal-open>\n        <img class=\"card-poster\"\n        data-id=\"${film.id}\" \n        src=\"${film.poster_path === null ? './no_image.jpg'\n              : `${IMG_URL}${film.poster_path}`\n          }\"\n        alt=\"${film.original_name}\" loading=\"lazy\">\n        <div class=\"card-wrap\">\n        <h2 class=\"card-title\" data-id=\"${film.id}\">${film.original_title.toUpperCase() || film.title.toUpperCase() || film.title.toUpperCase()}</h2>\n        <p class=\"card-info\"> ${transformId(film.genre_ids)} | ${(film.release_date || first_air_date).slice(0,4)} </p>\n         </div>\n    </li>`;\n        }).join(\"\");\nrefs.containerBox.innerHTML = markup;\n}\n\nexport {renderFilmList};\n\n///////////// --функція для створення карток  фільмів в MY LIBRARY----///////\nfunction renderMoviesCard(films) {\n    const filmCards = films\n    .map((film) => {\n        return `\n        <li class=\"main-container--card\"\n        data-modal-open>\n        <img class=\"card-poster\"\n        data-id=\"${film.id}\" \n        src=\"${IMG_URL}${film.poster_path}\" \n        alt=\"${film.original_name}\" loading=\"lazy\">\n        <div class=\"card-wrap\">\n        <h2 class=\"card-title\" data-id=\"${film.id}\">${film.original_title.toUpperCase() || film.title.toUpperCase() || film.title.toUpperCase()}</h2>\n        <p class=\"card-info\"> ${transformId(film.genre_ids)} | ${(film.release_date || first_air_date).slice(0,4)} <span class=\"card-rating\"> ${film.vote_average.toFixed(1)}</span></p>\n         </div>\n    </li>`;\n        }).join(\"\");\n    \n    refs.moviesContainer.insertAdjacentHTML('beforeend', filmCards);\n    \n};\n\nexport {renderMoviesCard};\n\n\n///////////// --функція для створення списку жанрів----///////\nfunction transformId ([...arr]) {\n    const g = localStorage.getItem(\"GENRES\");\n    const genres = JSON.parse(g);\n    let genreName;\n    const array = [...arr]\n    for (let i = 0; i < genres.length; i++) {\n        for (let x = 0; x < array.length; x++) {\n            if (array[x] === genres[i].id) {\n                genreName = genres[i].name;\n                array[x] = genreName\n            };\n        };\n    };\n    \n    console.log(array)\n    if (array.length > 3) {\n\n        return `${array[0]}, ${array[1]}, Other`\n    } else if (array.length > 2) {\n        return `${array[0]}, ${array[1]}, ${array[2]}`\n    } else if (array.length > 1) {\n       return `${array[0]}, ${array[1]}`\n   }\n    return `${array[0]}`\n};","export default {\n  // galleryHome: document.querySelector(\".main-container--card__box\"),\n  containerBox: document.querySelector(`.main-container--card__box`),\n  containerCard: document.querySelector(`.main-container--card`),\n  watchedList: document.querySelector('.header_btn-watched'),\n  moviesContainer: document.querySelector('.main-container--card__box'),\n  queueList: document.querySelector('.header_btn-queue'),\n  loader: document.querySelector('.js-loader'),\n  // btnAddWatched: document.querySelector(\".watched-btn\"),\n  // btnQueue: document.querySelector(\".queue-btn\")\n  // MODAL REFS\n  onBtnClose: document.querySelector('button[data-modal-close]'),\n  onBtnOpen: document.querySelector('.main-container--card__box'),\n  modal: document.querySelector('[data-modal]'),\n  modalContainer: document.querySelector('.modal'),\n  modalContent: document.querySelector('.modal-content'),\n  //\n};\n","import refs from \"./refs\";\n\nfunction addCurrrentMoviesToLocalStorage(array) { \nlocalStorage.setItem(\"MOVIE_LIST\", JSON.stringify(array))\n};\n\n\n// btnAddWatched.addEventListener(\"click\", onAddWatchedClick)\n// btnQueue.addEventListene(\"click\", onQueueClick)\n\n// const watched_movie = [];\n// const queue_movie = [];\n\n// function addWatchedFilmtoLocalStorage (film ){\n//     localStorage.setItem(\"WATCHED\", JSON.stringify(film))\n// }\n// function addQueueFilmtoLocalStorage (film ){\n//     localStorage.setItem(\"QUEUE\", JSON.stringify(film))\n// }\n \n// function onAddWatchedClick(evt) {\n//     film.push(обьект фильма)\n//     addWatchedFilmtoLocalStorage(обьект фильма)\n// };\n \n// function onQueueClick(evt) { \n//     film.push(обьект фильма)\n//     addWatchedFilmtoLocalStorage(обьект фильма)\n// };\n\n\nexport { addCurrrentMoviesToLocalStorage };"],"names":["$2nhTy","parcelRequire","pagination","default","refs","watched","document","querySelector","queue","containerMovie","emptyPage","getMovieStorage","localStorage","getItem","totalMovieElements","JSON","parse","countElpage","totalMoviePages","addEventListener","e","preventDefault","classList","add","remove","page","queryPage","partMovie","i","Math","ceil","length","end","start","slice","$k0Ust","renderMoviesCard","setCurrentPage","setTotalPages","setCallback","pagLibrary","renderPagination","paginationLibrary","e1","console","log","$1bab9c519cfa82bc$var$containerBox","$1bab9c519cfa82bc$var$pagination","$1bab9c519cfa82bc$var$paginationList","$1bab9c519cfa82bc$var$paginationPrev","$1bab9c519cfa82bc$var$paginationNext","$1bab9c519cfa82bc$var$sectionPagination","getElementById","style","display","$1bab9c519cfa82bc$export$2e2bcd8739ae039","init","this","onClickPages","bind","onClickBtnPrev","onClickBtnNext","window","innerWidth","currentPage","totalPages","createPagination","lastPage","leftDots","rightDots","firstPage","innerHTML","paginationStart","insertAdjacentHTML","paginationClass","paginationEnd","target","nodeName","textContent","scrollTo","top","behavior","callback","constructor","$krGWQ","$e91f9a2c1ec35283$export$f2275db3dee9e567","films","markup","map","film","id","poster_path","original_name","original_title","toUpperCase","title","$e91f9a2c1ec35283$var$transformId","genre_ids","release_date","first_air_date","join","containerBox","$e91f9a2c1ec35283$export$f48ccfcd8b08d9f9","filmCards","vote_average","toFixed","moviesContainer","arr","g","genres","genreName","array","x","name","$ee27a4d7c64fc8c4$export$2e2bcd8739ae039","containerCard","watchedList","queueList","loader","onBtnClose","onBtnOpen","modal","modalContainer","modalContent","$8125d1701b78b442$export$17c42003be0bef09","setItem","stringify"],"version":3,"file":"library.c055c37b.js.map"}