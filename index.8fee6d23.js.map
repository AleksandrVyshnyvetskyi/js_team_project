{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,aAGA,MAAMC,EAAO,CACTC,WAAYC,SAASC,cAAc,sBACnCC,QAASF,SAASC,cAAc,iBAChCE,gBAAiBH,SAASC,cAAc,8BACxCG,UAAWJ,SAASC,cAAc,sBAIhB,IAAlBI,EAAc,GAWlBP,EAAKC,WAAWO,iBAAiB,UAEjCC,eAAwBC,GASpB,GARAA,EAAMC,iBAENJ,EAAcG,EAAME,cAAcC,SAASC,MAAMC,MAAMC,OAGvDhB,EAAKM,UAAUW,UAAUC,IAAI,aAGT,KAAhBX,EACA,OAAOP,EAAKM,UAAUW,UAAUE,OAAO,aAG3C,IACI,MAAMC,QAtBdX,eAAgCY,GAC5B,aAAaC,EAAAxB,GAAMyB,IAAI,2GAAmDF,KACrEG,MAAKC,GAAYA,EAASC,OAoBNC,CAAiBpB,GAEtC,GAA2B,IAAvBa,EAAOQ,YACN,OAAO5B,EAAKM,UAAUW,UAAUE,OAAO,aA8DlDnB,EAAKK,gBAAgBwB,UAAY,GA1D3B7B,EAAKM,UAAUW,UAAUC,IAAI,aAWE,SAAbY,GACtB,MAAMC,EAASD,EACVE,KAAIC,GACM,2GAEsCA,EAAGC,qEAEzCD,EAAGE,4HAGeF,EAAGE,eAAeC,wDAWvD,aAA0BC,IACtB,MAAMC,EAAIC,aAAaC,QAAQ,UACzBC,EAASC,KAAKC,MAAML,GAC1B,IAAIM,EACJ,MAAMC,EAAQ,IAAIR,GAClB,IAAK,IAAIS,EAAI,EAAGA,EAAIL,EAAOM,OAAQD,IAC/B,IAAK,IAAIE,EAAI,EAAGA,EAAIH,EAAME,OAAQC,IAC1BH,EAAMG,KAAOP,EAAOK,GAAGG,KACvBL,EAAYH,EAAOK,GAAGI,KACtBL,EAAMG,GAAKJ,GAKvB,GAAIC,EAAME,OAAS,EACf,MAAO,GAAGF,EAAM,OAAOA,EAAM,YAC1B,GAAIA,EAAME,OAAS,EACtB,MAAO,GAAGF,EAAM,OAAOA,EAAM,OAAOA,EAAM,KACvC,GAAIA,EAAME,OAAS,EACtB,MAAO,GAAGF,EAAM,OAAOA,EAAM,KAEjC,MAAO,GAAGA,EAAM,KA/BeM,CAAYlB,EAAGmB,gBAAgBnB,EAAGoB,aAAaC,MAAM,EAAG,mDAIlFC,KAAK,IAEVvD,EAAKK,gBAAgBmD,mBAAmB,YAAazB,GA3BjD0B,CAAiBrC,EAAOU,UACxB,EAAA4B,EAAAC,iCAAiCvC,EAAOU,SACxC8B,QAAQC,IAAIzC,EAAOU,SAErB,MAAOgC,GAASF,QAAQC,IAAIC,GAE9B9D,EAAKI,QAAQW,MAAQ","sources":["src/js/search-by-keyword.js"],"sourcesContent":["import axios from \"axios\";\nimport { addCurrrentMoviesToLocalStorage } from \"./local-storage\";\n\nconst refs = {\n    searchForm: document.querySelector('.header_input-wrap'),\n    inputEl: document.querySelector('.header_input'),\n    moviesContainer: document.querySelector('.main-container--card__box'),\n    errorText: document.querySelector('.header_error-msg'),\n};\n\n///////Буде винесено в інший файл\nlet searchQuery = '';\n\nconst BASE_URL = `https://api.themoviedb.org/3/search/movie`;\nconst KEY = `2994e3a31c3cad99fd99bf3fe61d916f`;\n\nasync function fetchSearchMovie(searchQuery) {\n    return await axios.get(`${BASE_URL}?api_key=${KEY}&language=en-US&query=${searchQuery}`)\n        .then(response => response.data);\n}\n///////////\n\nrefs.searchForm.addEventListener('submit', onSearch);\n\nasync function onSearch(event) {\n    event.preventDefault();\n\n    searchQuery = event.currentTarget.elements.query.value.trim();\n    // console.log(searchQuery);\n\n    refs.errorText.classList.add('is-hidden');\n    \n\n    if (searchQuery === '') {\n        return refs.errorText.classList.remove('is-hidden');\n    };\n   \n    try {\n        const movies = await fetchSearchMovie(searchQuery);\n\n        if (movies.total_pages === 0) {\n             return refs.errorText.classList.remove('is-hidden');\n        };\n\n        clearMoviesContainer();\n        refs.errorText.classList.add('is-hidden');\n        renderMoviesCard(movies.results);\n        addCurrrentMoviesToLocalStorage (movies.results) \n        console.log(movies.results);\n        \n    } catch (error) { console.log(error) };\n\n    refs.inputEl.value = \"\";\n}\n\n//Наступна функція буде винесена в окремий файл\nfunction renderMoviesCard(results) {\n    const markup = results\n        .map(el => {\n            return `\n            <li class=\"main-container--card\">\n            <img src = \"https://image.tmdb.org/t/p/w500${el.poster_path}\"\n            class = \"film-poster\"\n            alt=\"${el.original_title}\" loading=\"lazy\"\n             />\n            <div class=\"film-info\">\n            <h3 class=\"film-title\">${el.original_title.toUpperCase()}</h3>\n            <p class=\"more-info\">${transformId(el.genre_ids)} | ${el.release_date.slice(0, 4)}</p>\n            </div>\n            </li> `\n        })\n        .join('');\n    \n    refs.moviesContainer.insertAdjacentHTML('beforeend', markup);\n};\n\n//Функція нижче також буде винесена в інший файл \nfunction transformId ([...arr]) {\n    const g = localStorage.getItem(\"GENRES\");\n    const genres = JSON.parse(g);\n    let genreName;\n    const array = [...arr]\n    for (let i = 0; i < genres.length; i++) {\n        for (let y = 0; y < array.length; y++) {\n            if (array[y] === genres[i].id) {\n                genreName = genres[i].name;\n                array[y] = genreName\n            };\n        };\n    };\n    // console.log(array)\n    if (array.length > 3) {\n        return `${array[0]}, ${array[1]}, Other`\n    } else if (array.length > 2) {\n        return `${array[0]}, ${array[1]}, ${array[2]}`\n    } else if (array.length > 1) {\n        return `${array[0]}, ${array[1]}`\n    }\n    return `${array[0]}`\n};\n\n\nfunction clearMoviesContainer() {\n  refs.moviesContainer.innerHTML = '';\n}\n\n"],"names":["$2shzp","parcelRequire","$c808da8250b3ec39$var$refs","searchForm","document","querySelector","inputEl","moviesContainer","errorText","$c808da8250b3ec39$var$searchQuery","addEventListener","async","event","preventDefault","currentTarget","elements","query","value","trim","classList","add","remove","movies","searchQuery1","$parcel$interopDefault","get","then","response","data","$c808da8250b3ec39$var$fetchSearchMovie","total_pages","innerHTML","results","markup","map","el","poster_path","original_title","toUpperCase","arr","g","localStorage","getItem","genres","JSON","parse","genreName","array","i","length","y","id","name","$c808da8250b3ec39$var$transformId","genre_ids","release_date","slice","join","insertAdjacentHTML","$c808da8250b3ec39$var$renderMoviesCard","$b5rV1","addCurrrentMoviesToLocalStorage","console","log","error"],"version":3,"file":"index.8fee6d23.js.map"}