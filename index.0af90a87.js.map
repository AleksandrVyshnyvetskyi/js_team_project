{"mappings":"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","sources":["src/js/fetch-films-main.js"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '2994e3a31c3cad99fd99bf3fe61d916f';\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\nimport Pagination from './pagination.js';\nimport API from './api-service.js';\nimport { addCurrrentMoviesToLocalStorage } from './local-storage';\nimport { preloaderShow, preloaderShowLonger, hidePreloader } from './loader';\n// import { renderFilmList } from './create-markup';\n\nconst refs = {\n  containerBox: document.querySelector(`.main-container--card__box`),\n  containerCard: document.querySelector(`.main-container--card`),\n};\n\nconst containerBox = document.querySelector(`.main-container--card__box`);\nconst inputEl = document.querySelector('.header_input');\n\nconst apiService = new API;\nconst pagination = new Pagination;\n\ngetPopularMovie();\n\n\n\n\n\n// Фун-ия, которая берет и передает данные по апи, имеет первый! параметр page = false. После параметра page можете передавать свои.\nfunction getPopularMovie(page = false) {\n  preloaderShowLonger();\n  const queryPage = page ? page : 1; // Проверка страниц, обязательно до fetch\n  apiService.setPageNumber = queryPage; // Передает текущую страницу в класс api\n\n\n\n  apiService.fetchPopularMovie().then(data => {\n    pagination.setCurrentPage = queryPage; // Передает страницу в пагинатор\n    pagination.setTotalPages = data.total_pages; // Передает общее кол-во страниц в пагинатор\n    pagination.setCallback = getPopularMovie; // Передает ссылку на коллбэк функцию\n    pagination.renderPagination(); // Вызов пагинации\n    addCurrrentMoviesToLocalStorage(data.results);\n    renderFilmList(data.results);\n  });\n}\n\nconst searchFilms = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n  renderFilmList(response.data.results);\n  addCurrrentMoviesToLocalStorage(response.data.results);\n  return response.data;\n};\n\nsearchFilms();\n\nconst addGenresToLocalStorage = async () => {\n  const genres = await axios.get(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=en-US`\n  );\n  localStorage.setItem('GENRES', JSON.stringify(genres.data.genres));\n};\n\naddGenresToLocalStorage();\n\n\n\n\n// function renderFilmList (films){\n//   const markup = films.map(film => {\n//       return `\n//         <li class=\"main-container--card\">\n//             <img\n//             class=\"film-poster\"\n//             src=\"${\n//               film.poster_path === null\n//                 ? './no_image.jpg'\n//                 : `https://image.tmdb.org/t/p/w500${film.poster_path}`\n//             }\" \n//                 alt=\"${film.original_title}\"\n//                 loading=\"lazy\" data-id=\"${film.id}\">\n//             <p class=\"film-info\">\n//             <h2 class=\"film-title\" data-id=\"${\n//               film.id\n//             }\">${film.original_title.toUpperCase()}</h2>\n//             <p class=\"more-info\"> ${transformId(\n//               film.genre_ids\n//             )} | ${film.release_date.slice(0, 4)}</p>\n//             </p>\n//         </li>\n//       `;\n//     })\n//     .join('');\n//   refs.containerBox.innerHTML = markup;\n// }\n\n\n// =============================================================================================================================\n\n\n// import refs from \"./refs\";\n// import { addCurrrentMoviesToLocalStorage } from \"./local-storage\"\n\n\n\n// const IMG_URL = \"https://image.tmdb.org/t/p/w500\"\n\n\n\n\n///////////// --функція для створення карток популярних фільмів на головну сторінку----///////\nfunction renderFilmList(films) {\n  refs.containerBox.innerHTML = '';\n\n    const markup = films\n      .map((film) => {\n            let date = film.release_date ?? film.first_air_date ?? null;\n            date = (date !== null) ? date.slice(0, 4) : '';\n            \n            let posterPath = ``\n            if(film.poster_path){posterPath=`${IMG_URL}${film.poster_path}`}\n            else{posterPath=\"https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg\"}\n\n            return `\n            <li class=\"main-container--card\"\n        data-modal-open>\n        <img class=\"card-poster\"\n        data-id=\"${film.id}\" \n        src='${posterPath}'\n        alt=\"${film.original_name}\" loading=\"lazy\">\n        <div class=\"card-wrap\">\n        <h2 class=\"card-title\" data-id=\"${film.id}\">${film.original_title.toUpperCase() || film.title.toUpperCase()}</h2>\n        <p class=\"card-info\"> ${transformId(film.genre_ids)} | ${date} </p>\n         </div>\n    </li>`;\n        }).join(\"\");\nrefs.containerBox.innerHTML = markup;\n}\n\nexport {renderFilmList};\n\n///////////// --функція для створення карток  фільмів в MY LIBRARY----///////\nfunction renderMoviesCard(films) {\n    const filmCards = films\n      .map((film) => {\n          let date = film.release_date ?? film.first_air_date ?? null;\n          date = (date !== null) ? date.slice(0, 4) : '';\n\n        if (!film.poster_path) {\n          return `\n        <li class=\"main-container--card\"\n        data-modal-open>\n          <img class=\"card-poster\"\n        data-id=\"${film.id}\" \n        src=\"https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg\" >\n        <div class=\"card-wrap\">\n        <h2 class=\"card-title\" data-id=\"${film.id}\">${film.original_title.toUpperCase() || film.title.toUpperCase() || film.title.toUpperCase()}</h2>\n        <p class=\"card-info\"> ${transformId(film.genre_ids)} | ${date} <span class=\"card-rating\"> ${film.vote_average.toFixed(1)}</span></p>\n         </div>\n    </li>`;\n        };        \n\n        return `\n        <li class=\"main-container--card\"\n        data-modal-open>\n          <img class=\"card-poster\"\n        data-id=\"${film.id}\" \n        src=\"${IMG_URL}${film.poster_path}\" \n        alt=\"${film.original_name}\" loading=\"lazy\">\n        <div class=\"card-wrap\">\n        <h2 class=\"card-title\" data-id=\"${film.id}\">${film.original_title.toUpperCase() || film.title.toUpperCase() || film.title.toUpperCase()}</h2>\n        <p class=\"card-info\"> ${transformId(film.genre_ids)} | ${date} <span class=\"card-rating\"> ${film.vote_average.toFixed(1)}</span></p>\n         </div>\n    </li>`;\n        }).join(\"\");\n    \n    refs.moviesContainer.insertAdjacentHTML('beforeend', filmCards);\n    \n};\n\nexport {renderMoviesCard};\n\n\nfunction transformId([...arr]) {\n  const g = localStorage.getItem('GENRES');\n  const genres = JSON.parse(g);\n  let genreName;\n  const array = [...arr];\n  for (let i = 0; i < genres.length; i++) {\n    for (let x = 0; x < array.length; x++) {\n      if (array[x] === genres[i].id) {\n        genreName = genres[i].name;\n        array[x] = genreName;\n      }\n    }\n  }\n  // console.log(array)\n\n  if (array.length > 2) {\n    return `${array[0]}, ${array[1]}, Other`;\n  } else if (array.length === 1) {\n        return `${array[0]}`\n  }\n  else if (array.length === 0) {\n    return `No genre`;\n  }\n  return `${array[0]}, ${array[1]}`;\n}\n\n\n// import refs from \"./refs\";\n// import { addCurrrentMoviesToLocalStorage } from \"./local-storage\";\n\n\n// const IMG_URL = \"https://image.tmdb.org/t/p/w500\";\n\n\n\n\n// ///////////// --функція для створення карток популярних фільмів на головну сторінку----///////\n// function renderFilmList(films) {\n//     const markup = films\n//         .map((film) => {\n//         console.log(film)\n//             return `\n//             <li class=\"main-container--card\"\n//         data-modal-open>\n//         <img class=\"card-poster\"\n//         data-id=\"${film.id}\" \n//         src=\"${film.poster_path === null ? './no_image.jpg'\n//               : `${IMG_URL}${film.poster_path}`\n//           }\"\n//         alt=\"${film.original_name}\" loading=\"lazy\">\n//         <div class=\"card-wrap\">\n//         <h2 class=\"card-title\" data-id=\"${film.id}\">${film.original_title.toUpperCase() || film.title.toUpperCase() || film.title.toUpperCase()}</h2>\n//         <p class=\"card-info\"> ${transformId(film.genre_ids)} | ${(film.release_date || first_air_date).slice(0,4)} </p>\n//          </div>\n//     </li>`;\n//         }).join(\"\");\n// refs.containerBox.innerHTML = markup;\n// }\n\n// export {renderFilmList};\n\n// ///////////// --функція для створення карток  фільмів в MY LIBRARY----///////\n// function renderMoviesCard(films) {\n//     const filmCards = films\n//     .map((film) => {\n//         return `\n//         <li class=\"main-container--card\"\n//         data-modal-open>\n//         <img class=\"card-poster\"\n//         data-id=\"${film.id}\" \n//         src=\"${IMG_URL}${film.poster_path}\" \n//         alt=\"${film.original_name}\" loading=\"lazy\">\n//         <div class=\"card-wrap\">\n//         <h2 class=\"card-title\" data-id=\"${film.id}\">${film.original_title.toUpperCase() || film.title.toUpperCase() || film.title.toUpperCase()}</h2>\n//         <p class=\"card-info\"> ${transformId(film.genre_ids)} | ${(film.release_date || first_air_date).slice(0,4)} <span class=\"card-rating\"> ${film.vote_average.toFixed(1)}</span></p>\n//          </div>\n//     </li>`;\n//         }).join(\"\");\n    \n//     refs.moviesContainer.insertAdjacentHTML('beforeend', filmCards);\n    \n// };\n\n// export {renderMoviesCard};\n\n\n// ///////////// --функція для створення списку жанрів----///////\n// function transformId ([...arr]) {\n//     const g = localStorage.getItem(\"GENRES\");\n//     const genres = JSON.parse(g);\n//     let genreName;\n//     const array = [...arr]\n//     for (let i = 0; i < genres.length; i++) {\n//         for (let x = 0; x < array.length; x++) {\n//             if (array[x] === genres[i].id) {\n//                 genreName = genres[i].name;\n//                 array[x] = genreName\n//             };\n//         };\n//     };\n//      if (array.length > 2) {\n//         return `${array[0]}, ${array[1]}, Other`\n//     }\n//     return `${array[0]}, ${array[1]}`\n// };\n"],"names":["$bpxeT","parcelRequire","$35001c1ba8f51596$var$API_KEY","$35001c1ba8f51596$var$IMG_URL","$35001c1ba8f51596$var$refs","containerBox","document","querySelector","containerCard","$35001c1ba8f51596$var$apiService","$1h2Gi","default","$35001c1ba8f51596$var$pagination","$jcFG7","$35001c1ba8f51596$var$getPopularMovie","page","arguments","length","$kvC6y","preloaderShowLonger","queryPage","setPageNumber","fetchPopularMovie","then","data","setCurrentPage","setTotalPages","total_pages","setCallback","renderPagination","$4LMMA","addCurrrentMoviesToLocalStorage","results","$35001c1ba8f51596$export$f2275db3dee9e567","$35001c1ba8f51596$var$searchFilms","$parcel$interopDefault","$2TvXO","mark","_callee","response","$dIxxU","get","concat","_ctx","sent","$35001c1ba8f51596$var$addGenresToLocalStorage","genres","localStorage","setItem","JSON","stringify","films","innerHTML","markup","map","film","_release_date","ref","date","release_date","first_air_date","slice","posterPath","poster_path","id","original_name","original_title","toUpperCase","title","$35001c1ba8f51596$var$transformId","genre_ids","join","$35001c1ba8f51596$export$f48ccfcd8b08d9f9","filmCards","vote_average","toFixed","moviesContainer","insertAdjacentHTML","param","genreName","arr","$q7ZX2","g","getItem","parse","array","$8nrFW","i","x","name"],"version":3,"file":"index.0af90a87.js.map"}