{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,iEAGMC,EAAO,CACTC,WAAYC,SAASC,cAAc,sBACnCC,QAASF,SAASC,cAAc,iBAChCE,gBAAiBH,SAASC,cAAc,8BACxCG,UAAWJ,SAASC,cAAc,sBAIlCI,EAAc,GAEZC,EAAY,4CACZC,EAAO,mC,SAEEC,EAAiBC,G,OAAjBC,EAAgBC,MAAAC,KAAAC,W,SAAhBH,I,OAAAA,EAAfI,EAAAlB,EAAA,CAAAkB,EAAAC,GAAAC,MAAA,SAAAC,EAAgCR,G,kFACfK,EAAAI,GAAMC,IAAI,GAAuBC,OAApBd,EAAS,aAAuCc,OAA5Bb,EAAI,0BAAoCa,OAAZX,IACrEY,MAAK,SAAAC,G,OAAYA,EAASC,Q,oFAFJZ,MAAAC,KAAAC,W,SAQhBW,I,OAAAA,EAAfV,EAAAlB,EAAA,CAAAkB,EAAAC,GAAAC,MAAA,SAAAC,EAAwBQ,G,IAcVC,E,qEAbVD,EAAME,iBAENtB,EAAcoB,EAAMG,cAAcC,SAASC,MAAMC,MAAMC,OAGvDlC,EAAKM,UAAU6B,UAAUC,IAAI,aAGT,KAAhB7B,EAAkB,C,wCACXP,EAAKM,UAAU6B,UAAUE,OAAO,c,gCAIlB3B,EAAiBH,G,UAEX,KAFrBqB,EAAMU,EAAAC,MAEDC,YAAiB,C,yCAChBxC,EAAKM,UAAU6B,UAAUE,OAAO,c,QAG5CI,IACAzC,EAAKM,UAAU6B,UAAUC,IAAI,aAC7BM,EAAiBd,EAAOe,UACxB,EAAAC,EAAAC,iCAAiCjB,EAAOe,SACxCG,QAAQC,IAAInB,EAAOe,S,kDAELG,QAAQC,IAAGT,EAAAU,I,QAE7BhD,EAAKI,QAAQ6B,MAAQ,G,2DA5BFpB,MAAAC,KAAAC,WAgCgB,SAA9B2B,EAAiBC,GACtB,IAAMM,EAASN,EACVO,KAAI,SAAAC,GACD,MAAO,2GAIA7B,OAFsC6B,EAAGC,YAAY,2DAKnC9B,OAHlB6B,EAAGE,eAAe,+GAIF/B,OADE6B,EAAGE,eAAeC,cAAc,4CACHhC,OAUlE,SAAsBiC,GAKlB,I,IAFIC,EAHeC,EAAOzC,EAAA0C,EAAA,CAARH,GAAQI,MAAP,GACbC,EAAIC,aAAaC,QAAQ,UACzBC,EAASC,KAAKC,MAAML,GAEpBM,EAASlD,EAAAmD,EAAA,CAAGV,GACTW,EAAI,EAAGA,EAAIL,EAAOM,OAAQD,IAC/B,IAAK,IAAIE,EAAI,EAAGA,EAAIJ,EAAMG,OAAQC,IAC1BJ,EAAMI,KAAOP,EAAOK,GAAGG,KACvBf,EAAYO,EAAOK,GAAGI,KACtBN,EAAMI,GAAKd,GAKvB,GAAIU,EAAMG,OAAS,EACf,MAAO,GAAgB/C,OAAb4C,EAAM,GAAG,MAAa5C,OAAT4C,EAAM,GAAG,WAC7B,GAAIA,EAAMG,OAAS,EACtB,MAAO,GAAgB/C,OAAb4C,EAAM,GAAG,MAAiB5C,OAAb4C,EAAM,GAAG,MAAa5C,OAAT4C,EAAM,IACvC,GAAIA,EAAMG,OAAS,EACtB,MAAO,GAAgB/C,OAAb4C,EAAM,GAAG,MAAa5C,OAAT4C,EAAM,IAEjC,MAAO,GAAY5C,OAAT4C,EAAM,IA/BeO,CAAYtB,EAAGuB,WAAW,OAAiCpD,OAA5B6B,EAAGwB,aAAahB,MAAM,EAAG,GAAG,mDAIrFiB,KAAK,IAEV5E,EAAKK,gBAAgBwE,mBAAmB,YAAa5B,GA6BzD,SAASR,IACPzC,EAAKK,gBAAgByE,UAAY,GAjFnC9E,EAAKC,WAAW8E,iBAAiB,U,SAETpD,G,OAATD,EAAQb,MAAAC,KAAAC,c","sources":["src/js/search-by-keyword.js"],"sourcesContent":["import axios from \"axios\";\nimport { addCurrrentMoviesToLocalStorage } from \"./local-storage\";\n\nconst refs = {\n    searchForm: document.querySelector('.header_input-wrap'),\n    inputEl: document.querySelector('.header_input'),\n    moviesContainer: document.querySelector('.main-container--card__box'),\n    errorText: document.querySelector('.header_error-msg'),\n};\n\n///////Буде винесено в інший файл\nlet searchQuery = '';\n\nconst BASE_URL = `https://api.themoviedb.org/3/search/movie`;\nconst KEY = `2994e3a31c3cad99fd99bf3fe61d916f`;\n\nasync function fetchSearchMovie(searchQuery) {\n    return await axios.get(`${BASE_URL}?api_key=${KEY}&language=en-US&query=${searchQuery}`)\n        .then(response => response.data);\n}\n///////////\n\nrefs.searchForm.addEventListener('submit', onSearch);\n\nasync function onSearch(event) {\n    event.preventDefault();\n\n    searchQuery = event.currentTarget.elements.query.value.trim();\n    // console.log(searchQuery);\n\n    refs.errorText.classList.add('is-hidden');\n    \n\n    if (searchQuery === '') {\n        return refs.errorText.classList.remove('is-hidden');\n    };\n   \n    try {\n        const movies = await fetchSearchMovie(searchQuery);\n\n        if (movies.total_pages === 0) {\n             return refs.errorText.classList.remove('is-hidden');\n        };\n\n        clearMoviesContainer();\n        refs.errorText.classList.add('is-hidden');\n        renderMoviesCard(movies.results);\n        addCurrrentMoviesToLocalStorage (movies.results) \n        console.log(movies.results);\n        \n    } catch (error) { console.log(error) };\n\n    refs.inputEl.value = \"\";\n}\n\n//Наступна функція буде винесена в окремий файл\nfunction renderMoviesCard(results) {\n    const markup = results\n        .map(el => {\n            return `\n            <li class=\"main-container--card\">\n            <img src = \"https://image.tmdb.org/t/p/w500${el.poster_path}\"\n            class = \"film-poster\"\n            alt=\"${el.original_title}\" loading=\"lazy\"\n             />\n            <div class=\"film-info\">\n            <h3 class=\"film-title\">${el.original_title.toUpperCase()}</h3>\n            <p class=\"more-info\">${transformId(el.genre_ids)} | ${el.release_date.slice(0, 4)}</p>\n            </div>\n            </li> `\n        })\n        .join('');\n    \n    refs.moviesContainer.insertAdjacentHTML('beforeend', markup);\n};\n\n//Функція нижче також буде винесена в інший файл \nfunction transformId ([...arr]) {\n    const g = localStorage.getItem(\"GENRES\");\n    const genres = JSON.parse(g);\n    let genreName;\n    const array = [...arr]\n    for (let i = 0; i < genres.length; i++) {\n        for (let y = 0; y < array.length; y++) {\n            if (array[y] === genres[i].id) {\n                genreName = genres[i].name;\n                array[y] = genreName\n            };\n        };\n    };\n    // console.log(array)\n    if (array.length > 3) {\n        return `${array[0]}, ${array[1]}, Other`\n    } else if (array.length > 2) {\n        return `${array[0]}, ${array[1]}, ${array[2]}`\n    } else if (array.length > 1) {\n        return `${array[0]}, ${array[1]}`\n    }\n    return `${array[0]}`\n};\n\n\nfunction clearMoviesContainer() {\n  refs.moviesContainer.innerHTML = '';\n}\n\n"],"names":["$bpxeT","parcelRequire","$ffc2dcc44f21eabb$var$refs","searchForm","document","querySelector","inputEl","moviesContainer","errorText","$ffc2dcc44f21eabb$var$searchQuery","$ffc2dcc44f21eabb$var$BASE_URL","$ffc2dcc44f21eabb$var$KEY","$ffc2dcc44f21eabb$var$fetchSearchMovie","searchQuery1","$ffc2dcc44f21eabb$var$_fetchSearchMovie","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","$dIxxU","get","concat","then","response","data","$ffc2dcc44f21eabb$var$_onSearch","event","movies","preventDefault","currentTarget","elements","query","value","trim","classList","add","remove","_ctx","sent","total_pages","$ffc2dcc44f21eabb$var$clearMoviesContainer","$ffc2dcc44f21eabb$var$renderMoviesCard","results","$4LMMA","addCurrrentMoviesToLocalStorage","console","log","t0","markup","map","el","poster_path","original_title","toUpperCase","param","genreName","arr","$q7ZX2","slice","g","localStorage","getItem","genres","JSON","parse","array","$8nrFW","i","length","y","id","name","$ffc2dcc44f21eabb$var$transformId","genre_ids","release_date","join","insertAdjacentHTML","innerHTML","addEventListener"],"version":3,"file":"index.8fb87c81.js.map"}