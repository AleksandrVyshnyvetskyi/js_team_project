{"mappings":"khBAAA,IAAAA,EAAAC,EAAA,S,aAGMC,EAAa,IAAI,EAAAF,EAAAG,SAEjBC,EAAO,CACTC,QAASC,SAASC,cAAc,sBAChCC,MAAOF,SAASC,cAAc,oBAC9BE,eAAgBH,SAASC,cAAc,8BACvCG,UAAWJ,SAASC,cAAc,gBAGhCI,EAAkBC,aAAaC,QAAQ,cACvCC,EAAqBC,KAAKC,MAAML,GAChCM,EAAc,GAChBC,EAAkB,EAMtB,GAJAd,EAAKC,QAAQc,iBAAiB,SAW9B,SAAwBC,GAKtB,GAJAA,EAAEC,iBACFjB,EAAKC,QAAQiB,UAAUC,IAAI,eAC3BnB,EAAKI,MAAMc,UAAUE,OAAO,gBAExBV,EAOF,OAAOV,EAAKM,UAAUY,UAAUC,IAAI,WANpC,KAeJ,W,IAA2BE,EAAAC,UAAAC,OAAA,YAAAD,UAAA,IAAYA,UAAA,GAC/BE,EAAYH,GAAc,EAC1BI,EAAY,GAElB,GAAIX,EAAkB,EAAG,CACvB,IAAK,IAAIY,EAAI,EAAGA,GAAKC,KAAKC,KAAKlB,EAAmBa,OAASV,GAAca,GAAK,EAAG,CAC7E,IAAIG,EAAOhB,EAAca,EACrBI,EAAQJ,EAAI,EAAKb,GAAea,EAAI,GAAM,EAC1Cb,EAAea,EAAKhB,EAAmBa,SACzCM,EAAMnB,EAAmBa,QAG3BE,EAAUC,GAAMhB,EAAmBqB,MAAMD,EAAOD,GAGpDf,EAAkBW,EAAUF,OAAS,GAGrC,EAAAS,EAAAC,kBAAiBR,EAAUD,IAE3B1B,EAAWoC,eAAiBV,EAC5B1B,EAAWqC,cAAgBrB,EAC3BhB,EAAWsC,YAAcC,WACzBvC,EAAWwC,oBArCTC,GACA,MAAOC,GACPC,QAAQC,IAAIF,OAhBd9B,EAAmBa,OAAS,EAC9B,OAAOvB,EAAKM,UAAUY,UAAUC,IAAI,c","sources":["src/js/libraryList.js"],"sourcesContent":["import Pagination from './pagination.js';\nimport { renderMoviesCard } from \"./create-markup\"\n\nconst pagination = new Pagination;\n\nconst refs = {\n    watched: document.querySelector('.js-button-watched'),\n    queue: document.querySelector('.js-button-queue'),\n    containerMovie: document.querySelector('.main-container--card__box'),\n    emptyPage: document.querySelector('.empty_page'),\n};\n\nconst getMovieStorage = localStorage.getItem('MOVIE_LIST');\nconst totalMovieElements = JSON.parse(getMovieStorage);\nconst countElpage = 10;\nlet totalMoviePages = 0;\n\nrefs.watched.addEventListener('click', onWatchedClick);\n// refs.queue.addEventListener('click', onQueueClick);\n\n\nif (totalMovieElements.length < 1) { \n  return refs.emptyPage.classList.add('visible');\n}\n\n\n\n\nfunction onWatchedClick(e) {\n  e.preventDefault();\n  refs.watched.classList.add('current-btn');\n  refs.queue.classList.remove('current-btn');\n    \n  if (totalMovieElements) {\n    try {\n      paginationLibrary()\n    } catch (e) {\n      console.log(e);\n    }\n  } else { \n    return refs.emptyPage.classList.add('visible');\n  }\n\n  \n \n  \n}\n\n\nfunction paginationLibrary(page = false) { \n  const queryPage = page ? page : 1; \n  const partMovie = [];\n\n  if (totalMoviePages > 1) { \n    for (let i = 1; i <= Math.ceil(totalMovieElements.length / countElpage); i += 1) { \n        let end = (countElpage * i);\n        let start = i > 1 ? (countElpage * (i - 1)) : 0;\n        if ((countElpage * i) > totalMovieElements.length) { \n          end = totalMovieElements.length;\n        }\n\n        partMovie[i] = (totalMovieElements.slice(start, end))\n    }\n    \n    totalMoviePages = partMovie.length - 1;\n  \n  \n    renderMoviesCard(partMovie[queryPage])\n\n    pagination.setCurrentPage = queryPage;\n    pagination.setTotalPages = totalMoviePages; \n    pagination.setCallback = pagLibrary; \n    pagination.renderPagination(); \n      \n  }\n  \n}\n\n\n\n\n\n\n// function getPopularMovie(page = false) { \n//     const queryPage = page ? page : 1; // Проверка страниц, обязательно до fetch\n//     apiService.setPageNumber = queryPage; // Передает текущую страницу в класс api\n\n//     apiService.fetchPopularMovie().then(data => {\n\n//         pagination.setCurrentPage = queryPage; // Передает страницу в пагинатор\n//         pagination.setTotalPages = data.total_pages; // Передает общее кол-во страниц в пагинатор\n//         pagination.setCallback = getPopularMovie; // Передает ссылку на коллбэк функцию \n//         pagination.renderPagination(); // Вызов пагинации\n\n//         renderFilmList(data.results); \n//     }\n        \n// );\n// }\n\n\n// const refs = {\n//     watched: document.querySelector('.js-button-watched'),\n//     queue: document.querySelector('.js-button-queue'),\n//     container: document.querySelector('.films__list'),\n// };\n// let data = {\n//   page: 1,\n//   results: [],\n// };\n\n// let queueKey;\n// let watchedKey;\n// let isActiveKey;\n\n// refs.watched.addEventListener('click', onWatchedClick);\n// refs.queue.addEventListener('click', onQueueClick);\n\n// function onWatchedClick(e) {\n//   e.preventDefault();\n//   refs.watched.classList.add('header__button--active');\n//   refs.queue.classList.remove('header__button--active');\n//   // localStorage.setItem('isActive', 'watched'); // Необходимо сверить название класса просмотренных фильмов\n//   watchedKey = localStorage.getItem('MOVIE_LIST'); // Необходимо сверить название класса просмотренных фильмов\n\n  \n//   if (watchedKey) {\n//     try {\n//       data = JSON.parse(watchedKey);\n//       console.log(data)\n//     } catch (e) {\n//       console.log(e);\n//     }\n//   }\n//   markup(data);\n// }\n\n// function onQueueClick(e) {\n//   e.preventDefault();\n//   refs.queue.classList.add('link-current');\n//   refs.watched.classList.remove('link-current');\n//   localStorage.setItem('isActive', 'queue'); // Необходимо проверить название класса фильмов из очереди\n//   queueKey = localStorage.getItem('queue'); // Необходимо проверить название класса фильмов из очереди\n//   if (queueKey) {\n//     try {\n//       data = JSON.parse(queueKey);\n//     } catch (e) {\n//       console.log(e);\n//     }\n//   }\n//   markup(data);\n// }\n\n// function libraryMarkup() {\n// //   refs.paginationList.style.display = 'none';\n//   localStorage.setItem('isActive', 'watched');\n//   isActiveKey = localStorage.getItem('isActive');\n\n//   if (isActiveKey) {\n//     if (isActiveKey === 'queue') {\n//       refs.queue.classList.add('header__button--active');\n//       refs.watched.classList.remove('header__button--active');\n//       queueKey = localStorage.getItem('queue');\n//       if (queueKey) {\n//         try {\n//           data = JSON.parse(queueKey);\n//         } catch (e) {\n//           console.log(e);\n//         }\n//       } else {\n//         localStorage.setItem('queue', JSON.stringify(data));\n//       }\n//     } else {\n//       refs.watched.classList.add('header__button--active');\n//       refs.queue.classList.remove('header__button--active');\n//       watchedKey = localStorage.getItem('watched');\n//       if (watchedKey) {\n//         try {\n//           data = JSON.parse(watchedKey);\n//         } catch (e) {\n//           console.log(e);\n//         }\n//       } else {\n//         localStorage.setItem('watched', JSON.stringify(data));\n//       }\n//     }\n//   } else {\n//     isActiveKey = 'watched';\n//     localStorage.setItem('isActive', isActiveKey);\n//     refs.watched.classList.add('header__button--active');\n//     refs.queue.classList.remove('header__button--active');\n//     localStorage.setItem('watched', JSON.stringify(data));\n//     localStorage.setItem('queue', JSON.stringify(data));\n//   }\n\n//   markup(data);\n// }\n\n// function markup(data) {\n//   refs.container.innerHTML = '';\n\n//   const markup = data\n//     .map((d) => {\n//       return `\n//         <li class=\"films__item\">\n//             <img class=\"films__poster\" src=\"https://image.tmdb.org/t/p/w500${d.poster_path}\" alt=\"${d.original_title}\" loading=\"lazy\">\n//             <div class=\"films__info\">\n//               <h2 class=\"films__title\">${d.original_title.toUpperCase()}</h2>\n//               <p class=\"films__more-info\"> ${transformId(d.genre_ids)} | ${d.release_date.slice(0, 4)}</p>\n//             </div>\n//         </li>`});\n  \n\n\n//   refs.container.insertAdjacentHTML(\n//     'beforeend', markup);\n \n\n//   if (data.length > 0) {\n//     // galleryArrayMarkup(data);\n//     // modalOpenOnClick();\n//   } else {\n    \n//   }\n// }\n\n// function transformId ([...arr]) {\n//     const g = localStorage.getItem(\"GENRES\");\n//     const genres = JSON.parse(g);\n//     let genreName;\n//     const array = [...arr]\n//     // console.log(genres)\n//     for (let i = 0; i < genres.length; i++) {\n//         // console.log(genres[i]);\n//         for (let x = 0; x < array.length; x++) {\n//             if (array[x] === genres[i].id) {\n//                 genreName = genres[i].name;\n//                 array[x] = genreName\n//             };\n//         };\n//     };\n//     console.log(array)\n//     if (array.length > 2) {\n//         return `${array[0]}, ${array[1]}, Other`\n//     }\n//     return `${array[0]}, ${array[1]}`\n// };\n// // export { libraryMarkup, markup };"],"names":["$jcFG7","parcelRequire","pagination","default","refs","watched","document","querySelector","queue","containerMovie","emptyPage","getMovieStorage","localStorage","getItem","totalMovieElements","JSON","parse","countElpage","totalMoviePages","addEventListener","e","preventDefault","classList","add","remove","page","arguments","length","queryPage","partMovie","i","Math","ceil","end","start","slice","$dI30Z","renderMoviesCard","setCurrentPage","setTotalPages","setCallback","pagLibrary","renderPagination","paginationLibrary","e1","console","log"],"version":3,"file":"library.8f767d23.js.map"}